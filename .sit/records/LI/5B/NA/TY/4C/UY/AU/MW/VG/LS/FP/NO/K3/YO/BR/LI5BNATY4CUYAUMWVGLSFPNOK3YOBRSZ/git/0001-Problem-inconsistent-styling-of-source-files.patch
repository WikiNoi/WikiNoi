From 7266a5d3f77905871eb4c9f1a9252b2f21e7ecc2 Mon Sep 17 00:00:00 2001
From: Yurii Rashkovskii <me@yrashk.com>
Date: Sat, 3 Nov 2018 14:17:04 -0700
Subject: [PATCH] Problem: inconsistent styling of source files

Solution: use StandardJS (standardjs.com)

As a part of this transition, .noi files are being renamed to .html so
that eslint properly understands them. This has an added benefit of
automatic syntax support for these files (because they are, in fact,
HTMLs).

Also, third-party code has been moved to `vendor` and is not subject to
StandardJS guidelines
---
 index.js                                      |   49 +-
 package-lock.json                             | 1932 +++++++++++++++++
 package.json                                  |   15 +-
 src/{about.noi => about.html}                 |    0
 src/{config.noi => config.html}               |    0
 src/core/{core-style.noi => core-style.html}  |    0
 src/core/events.html                          |   26 +
 src/core/events.noi                           |   26 -
 src/core/{noi-link.noi => noi-link.html}      |    8 +-
 src/core/noi-transclude.html                  |   29 +
 src/core/noi-transclude.noi                   |   29 -
 src/core/noi-var.html                         |   37 +
 src/core/noi-var.noi                          |   38 -
 src/core/noi-wiki.html                        |  156 ++
 src/core/noi-wiki.noi                         |  158 --
 src/core/{noi-wikis.noi => noi-wikis.html}    |   17 +-
 src/{default.noi => default.html}             |    0
 src/libraries/markdown-it/noi-link.html       |   53 +
 src/libraries/markdown-it/noi-link.noi        |   54 -
 ...noi-transclude.noi => noi-transclude.html} |   50 +-
 src/libraries/markdown-it/noi-var.html        |   49 +
 src/libraries/markdown-it/noi-var.noi         |   51 -
 src/libraries/markdown-it/noi-widget.html     |   68 +
 src/libraries/markdown-it/noi-widget.noi      |   69 -
 src/render/bulma/{navbar.noi => navbar.html}  |   64 +-
 src/render/bulma/noi-listener.html            |   23 +
 src/render/bulma/noi-listener.noi             |   25 -
 src/render/bulma/wiki-view.html               |   72 +
 src/render/bulma/wiki-view.noi                |   72 -
 src/render/content-renderer.html              |   68 +
 src/render/content-renderer.noi               |   65 -
 .../0_polyfills/web-components.html           |    0
 {src => vendor}/libraries/file-to-data-uri.sh |    0
 .../hyper.noi => vendor/libraries/hyper.html  |    0
 .../libraries/markdown-it/attrs.html          |    0
 .../libraries/markdown-it/markdown-it.html    |    0
 .../libraries/markdown-it/subsup.html         |    0
 .../libraries/typicons.html                   |    0
 .../libraries/typicons/typicons.css           |    0
 .../libraries/typicons/typicons.eot           |  Bin
 .../libraries/typicons/typicons.min.css       |    0
 .../libraries/typicons/typicons.svg           |    0
 .../libraries/typicons/typicons.ttf           |  Bin
 .../libraries/typicons/typicons.woff          |  Bin
 .../render/bulma/bulma-style.html             |    0
 45 files changed, 2621 insertions(+), 682 deletions(-)
 create mode 100644 package-lock.json
 rename src/{about.noi => about.html} (100%)
 rename src/{config.noi => config.html} (100%)
 rename src/core/{core-style.noi => core-style.html} (100%)
 create mode 100644 src/core/events.html
 delete mode 100644 src/core/events.noi
 rename src/core/{noi-link.noi => noi-link.html} (56%)
 create mode 100644 src/core/noi-transclude.html
 delete mode 100644 src/core/noi-transclude.noi
 create mode 100644 src/core/noi-var.html
 delete mode 100644 src/core/noi-var.noi
 create mode 100644 src/core/noi-wiki.html
 delete mode 100644 src/core/noi-wiki.noi
 rename src/core/{noi-wikis.noi => noi-wikis.html} (61%)
 rename src/{default.noi => default.html} (100%)
 create mode 100644 src/libraries/markdown-it/noi-link.html
 delete mode 100644 src/libraries/markdown-it/noi-link.noi
 rename src/libraries/markdown-it/{noi-transclude.noi => noi-transclude.html} (50%)
 create mode 100644 src/libraries/markdown-it/noi-var.html
 delete mode 100644 src/libraries/markdown-it/noi-var.noi
 create mode 100644 src/libraries/markdown-it/noi-widget.html
 delete mode 100644 src/libraries/markdown-it/noi-widget.noi
 rename src/render/bulma/{navbar.noi => navbar.html} (54%)
 create mode 100644 src/render/bulma/noi-listener.html
 delete mode 100644 src/render/bulma/noi-listener.noi
 create mode 100644 src/render/bulma/wiki-view.html
 delete mode 100644 src/render/bulma/wiki-view.noi
 create mode 100644 src/render/content-renderer.html
 delete mode 100644 src/render/content-renderer.noi
 rename src/0_polyfills/web-components.noi => vendor/0_polyfills/web-components.html (100%)
 rename {src => vendor}/libraries/file-to-data-uri.sh (100%)
 rename src/libraries/hyper.noi => vendor/libraries/hyper.html (100%)
 rename src/libraries/markdown-it/attrs.noi => vendor/libraries/markdown-it/attrs.html (100%)
 rename src/libraries/markdown-it/markdown-it.noi => vendor/libraries/markdown-it/markdown-it.html (100%)
 rename src/libraries/markdown-it/subsup.noi => vendor/libraries/markdown-it/subsup.html (100%)
 rename src/libraries/typicons.noi => vendor/libraries/typicons.html (100%)
 rename {src => vendor}/libraries/typicons/typicons.css (100%)
 rename {src => vendor}/libraries/typicons/typicons.eot (100%)
 rename {src => vendor}/libraries/typicons/typicons.min.css (100%)
 rename {src => vendor}/libraries/typicons/typicons.svg (100%)
 rename {src => vendor}/libraries/typicons/typicons.ttf (100%)
 rename {src => vendor}/libraries/typicons/typicons.woff (100%)
 rename src/render/bulma/bulma-style.noi => vendor/render/bulma/bulma-style.html (100%)

diff --git a/index.js b/index.js
index c1e89a6..731d38e 100644
--- a/index.js
+++ b/index.js
@@ -1,32 +1,37 @@
-const fs = require('fs'),
-        path = require('path');
+const fs = require('fs')
 
-const src = "src";
+const path = require('path')
 
-function extract(src, f) {
-        if (process.env.POLYFILL == 'skip' && src.endsWith("0_polyfills")) {
-                return
-        }
-        var dir = fs.readdirSync(src);
-        dir.sort();
-        dir.forEach(file => {
-                const src_ = path.join(src, file)
-                if (fs.statSync(src_).isDirectory()) {
-                        extract(src_, f);
-                } else if (path.extname(src_) == ".noi") {
-                        fs.writeSync(f, fs.readFileSync(src_));
-                }
-        });
+const vendor = 'vendor'
+const src = 'src'
+
+function extract (src, f) {
+  if (process.env.POLYFILL === 'skip' && src.endsWith('0_polyfills')) {
+    return
+  }
+  var dir = fs.readdirSync(src)
+  dir.sort()
+  dir.forEach(file => {
+    const src_ = path.join(src, file)
+    if (fs.statSync(src_).isDirectory()) {
+      extract(src_, f)
+    } else if (path.extname(src_) === '.html') {
+      fs.writeSync(f, fs.readFileSync(src_))
+    }
+  })
 }
 
-var file = fs.openSync("index.html", "w");
+var file = fs.openSync('index.html', 'w')
 fs.writeSync(file, `<!DOCTYPE html>
             <html>
               <head>
                 <meta charset="utf-8">
                 <meta name="viewport" content="width=device-width, initial-scale=1">
               </head>
-              <body>`);
-extract(src, file);
-fs.writeSync(file, "</body></html>");
-fs.closeSync(file);
+              <body>`)
+
+extract(vendor, file)
+extract(src, file)
+
+fs.writeSync(file, '</body></html>')
+fs.closeSync(file)
diff --git a/package-lock.json b/package-lock.json
new file mode 100644
index 0000000..9950806
--- /dev/null
+++ b/package-lock.json
@@ -0,0 +1,1932 @@
+{
+  "name": "wikinoi",
+  "version": "0.1.0",
+  "lockfileVersion": 1,
+  "requires": true,
+  "dependencies": {
+    "acorn": {
+      "version": "6.0.2",
+      "resolved": "https://registry.npmjs.org/acorn/-/acorn-6.0.2.tgz",
+      "integrity": "sha512-GXmKIvbrN3TV7aVqAzVFaMW8F8wzVX7voEBRO3bDA64+EX37YSayggRJP5Xig6HYHBkWKpFg9W5gg6orklubhg==",
+      "dev": true
+    },
+    "acorn-jsx": {
+      "version": "5.0.0",
+      "resolved": "https://registry.npmjs.org/acorn-jsx/-/acorn-jsx-5.0.0.tgz",
+      "integrity": "sha512-XkB50fn0MURDyww9+UYL3c1yLbOBz0ZFvrdYlGB8l+Ije1oSC75qAqrzSPjYQbdnQUzhlUGNKuesryAv0gxZOg==",
+      "dev": true
+    },
+    "ajv-keywords": {
+      "version": "3.2.0",
+      "resolved": "https://registry.npmjs.org/ajv-keywords/-/ajv-keywords-3.2.0.tgz",
+      "integrity": "sha1-6GuBnGAs+IIa1jdBNpjx3sAhhHo=",
+      "dev": true
+    },
+    "ansi-escapes": {
+      "version": "3.1.0",
+      "resolved": "https://registry.npmjs.org/ansi-escapes/-/ansi-escapes-3.1.0.tgz",
+      "integrity": "sha512-UgAb8H9D41AQnu/PbWlCofQVcnV4Gs2bBJi9eZPxfU/hgglFh3SMDMENRIqdr7H6XFnXdoknctFByVsCOotTVw==",
+      "dev": true
+    },
+    "ansi-regex": {
+      "version": "2.1.1",
+      "resolved": "https://registry.npmjs.org/ansi-regex/-/ansi-regex-2.1.1.tgz",
+      "integrity": "sha1-w7M6te42DYbg5ijwRorn7yfWVN8=",
+      "dev": true
+    },
+    "ansi-styles": {
+      "version": "3.2.1",
+      "resolved": "https://registry.npmjs.org/ansi-styles/-/ansi-styles-3.2.1.tgz",
+      "integrity": "sha512-VT0ZI6kZRdTh8YyJw3SMbYm/u+NqfsAxEpWO0Pf9sq8/e94WxxOpPKx9FR1FlyCtOVDNOQ+8ntlqFxiRc+r5qA==",
+      "dev": true,
+      "requires": {
+        "color-convert": "^1.9.0"
+      }
+    },
+    "argparse": {
+      "version": "1.0.10",
+      "resolved": "https://registry.npmjs.org/argparse/-/argparse-1.0.10.tgz",
+      "integrity": "sha512-o5Roy6tNG4SL/FOkCAN6RzjiakZS25RLYFrcMttJqbdd8BWrnA+fGz57iN5Pb06pvBGvl5gQ0B48dJlslXvoTg==",
+      "dev": true,
+      "requires": {
+        "sprintf-js": "~1.0.2"
+      }
+    },
+    "array-includes": {
+      "version": "3.0.3",
+      "resolved": "https://registry.npmjs.org/array-includes/-/array-includes-3.0.3.tgz",
+      "integrity": "sha1-GEtI9i2S10UrsxsyMWXH+L0CJm0=",
+      "dev": true,
+      "requires": {
+        "define-properties": "^1.1.2",
+        "es-abstract": "^1.7.0"
+      }
+    },
+    "array-union": {
+      "version": "1.0.2",
+      "resolved": "https://registry.npmjs.org/array-union/-/array-union-1.0.2.tgz",
+      "integrity": "sha1-mjRBDk9OPaI96jdb5b5w8kd47Dk=",
+      "dev": true,
+      "requires": {
+        "array-uniq": "^1.0.1"
+      }
+    },
+    "array-uniq": {
+      "version": "1.0.3",
+      "resolved": "https://registry.npmjs.org/array-uniq/-/array-uniq-1.0.3.tgz",
+      "integrity": "sha1-r2rId6Jcx/dOBYiUdThY39sk/bY=",
+      "dev": true
+    },
+    "arrify": {
+      "version": "1.0.1",
+      "resolved": "https://registry.npmjs.org/arrify/-/arrify-1.0.1.tgz",
+      "integrity": "sha1-iYUI2iIm84DfkEcoRWhJwVAaSw0=",
+      "dev": true
+    },
+    "babel-code-frame": {
+      "version": "6.26.0",
+      "resolved": "https://registry.npmjs.org/babel-code-frame/-/babel-code-frame-6.26.0.tgz",
+      "integrity": "sha1-Y/1D99weO7fONZR9uP42mj9Yx0s=",
+      "dev": true,
+      "requires": {
+        "chalk": "^1.1.3",
+        "esutils": "^2.0.2",
+        "js-tokens": "^3.0.2"
+      },
+      "dependencies": {
+        "ansi-styles": {
+          "version": "2.2.1",
+          "resolved": "https://registry.npmjs.org/ansi-styles/-/ansi-styles-2.2.1.tgz",
+          "integrity": "sha1-tDLdM1i2NM914eRmQ2gkBTPB3b4=",
+          "dev": true
+        },
+        "chalk": {
+          "version": "1.1.3",
+          "resolved": "http://registry.npmjs.org/chalk/-/chalk-1.1.3.tgz",
+          "integrity": "sha1-qBFcVeSnAv5NFQq9OHKCKn4J/Jg=",
+          "dev": true,
+          "requires": {
+            "ansi-styles": "^2.2.1",
+            "escape-string-regexp": "^1.0.2",
+            "has-ansi": "^2.0.0",
+            "strip-ansi": "^3.0.0",
+            "supports-color": "^2.0.0"
+          }
+        },
+        "supports-color": {
+          "version": "2.0.0",
+          "resolved": "https://registry.npmjs.org/supports-color/-/supports-color-2.0.0.tgz",
+          "integrity": "sha1-U10EXOa2Nj+kARcIRimZXp3zJMc=",
+          "dev": true
+        }
+      }
+    },
+    "balanced-match": {
+      "version": "1.0.0",
+      "resolved": "https://registry.npmjs.org/balanced-match/-/balanced-match-1.0.0.tgz",
+      "integrity": "sha1-ibTRmasr7kneFk6gK4nORi1xt2c=",
+      "dev": true
+    },
+    "brace-expansion": {
+      "version": "1.1.11",
+      "resolved": "https://registry.npmjs.org/brace-expansion/-/brace-expansion-1.1.11.tgz",
+      "integrity": "sha512-iCuPHDFgrHX7H2vEI/5xpz07zSHB00TpugqhmYtVmMO6518mCuRMoOYFldEBl0g187ufozdaHgWKcYFb61qGiA==",
+      "dev": true,
+      "requires": {
+        "balanced-match": "^1.0.0",
+        "concat-map": "0.0.1"
+      }
+    },
+    "builtin-modules": {
+      "version": "1.1.1",
+      "resolved": "https://registry.npmjs.org/builtin-modules/-/builtin-modules-1.1.1.tgz",
+      "integrity": "sha1-Jw8HbFpywC9bZaR9+Uxf46J4iS8=",
+      "dev": true
+    },
+    "caller-path": {
+      "version": "0.1.0",
+      "resolved": "https://registry.npmjs.org/caller-path/-/caller-path-0.1.0.tgz",
+      "integrity": "sha1-lAhe9jWB7NPaqSREqP6U6CV3dR8=",
+      "dev": true,
+      "requires": {
+        "callsites": "^0.2.0"
+      }
+    },
+    "callsites": {
+      "version": "0.2.0",
+      "resolved": "https://registry.npmjs.org/callsites/-/callsites-0.2.0.tgz",
+      "integrity": "sha1-r6uWJikQp/M8GaV3WCXGnzTjUMo=",
+      "dev": true
+    },
+    "chalk": {
+      "version": "2.4.1",
+      "resolved": "https://registry.npmjs.org/chalk/-/chalk-2.4.1.tgz",
+      "integrity": "sha512-ObN6h1v2fTJSmUXoS3nMQ92LbDK9be4TV+6G+omQlGJFdcUX5heKi1LZ1YnRMIgwTLEj3E24bT6tYni50rlCfQ==",
+      "dev": true,
+      "requires": {
+        "ansi-styles": "^3.2.1",
+        "escape-string-regexp": "^1.0.5",
+        "supports-color": "^5.3.0"
+      }
+    },
+    "circular-json": {
+      "version": "0.3.3",
+      "resolved": "https://registry.npmjs.org/circular-json/-/circular-json-0.3.3.tgz",
+      "integrity": "sha512-UZK3NBx2Mca+b5LsG7bY183pHWt5Y1xts4P3Pz7ENTwGVnJOUWbRb3ocjvX7hx9tq/yTAdclXm9sZ38gNuem4A==",
+      "dev": true
+    },
+    "cli-cursor": {
+      "version": "2.1.0",
+      "resolved": "https://registry.npmjs.org/cli-cursor/-/cli-cursor-2.1.0.tgz",
+      "integrity": "sha1-s12sN2R5+sw+lHR9QdDQ9SOP/LU=",
+      "dev": true,
+      "requires": {
+        "restore-cursor": "^2.0.0"
+      }
+    },
+    "cli-width": {
+      "version": "2.2.0",
+      "resolved": "https://registry.npmjs.org/cli-width/-/cli-width-2.2.0.tgz",
+      "integrity": "sha1-/xnt6Kml5XkyQUewwR8PvLq+1jk=",
+      "dev": true
+    },
+    "color-convert": {
+      "version": "1.9.3",
+      "resolved": "https://registry.npmjs.org/color-convert/-/color-convert-1.9.3.tgz",
+      "integrity": "sha512-QfAUtd+vFdAtFQcC8CCyYt1fYWxSqAiK2cSD6zDB8N3cpsEBAvRxp9zOGg6G/SHHJYAT88/az/IuDGALsNVbGg==",
+      "dev": true,
+      "requires": {
+        "color-name": "1.1.3"
+      }
+    },
+    "color-name": {
+      "version": "1.1.3",
+      "resolved": "https://registry.npmjs.org/color-name/-/color-name-1.1.3.tgz",
+      "integrity": "sha1-p9BVi9icQveV3UIyj3QIMcpTvCU=",
+      "dev": true
+    },
+    "concat-map": {
+      "version": "0.0.1",
+      "resolved": "https://registry.npmjs.org/concat-map/-/concat-map-0.0.1.tgz",
+      "integrity": "sha1-2Klr13/Wjfd5OnMDajug1UBdR3s=",
+      "dev": true
+    },
+    "contains-path": {
+      "version": "0.1.0",
+      "resolved": "https://registry.npmjs.org/contains-path/-/contains-path-0.1.0.tgz",
+      "integrity": "sha1-/ozxhP9mcLa67wGp1IYaXL7EEgo=",
+      "dev": true
+    },
+    "cross-spawn": {
+      "version": "6.0.5",
+      "resolved": "https://registry.npmjs.org/cross-spawn/-/cross-spawn-6.0.5.tgz",
+      "integrity": "sha512-eTVLrBSt7fjbDygz805pMnstIs2VTBNkRm0qxZd+M7A5XDdxVRWO5MxGBXZhjY4cqLYLdtrGqRf8mBPmzwSpWQ==",
+      "dev": true,
+      "requires": {
+        "nice-try": "^1.0.4",
+        "path-key": "^2.0.1",
+        "semver": "^5.5.0",
+        "shebang-command": "^1.2.0",
+        "which": "^1.2.9"
+      }
+    },
+    "debug": {
+      "version": "2.6.9",
+      "resolved": "https://registry.npmjs.org/debug/-/debug-2.6.9.tgz",
+      "integrity": "sha512-bC7ElrdJaJnPbAP+1EotYvqZsb3ecl5wi6Bfi6BJTUcNowp6cvspg0jXznRTKDjm/E7AdgFBVeAPVMNcKGsHMA==",
+      "dev": true,
+      "requires": {
+        "ms": "2.0.0"
+      }
+    },
+    "debug-log": {
+      "version": "1.0.1",
+      "resolved": "https://registry.npmjs.org/debug-log/-/debug-log-1.0.1.tgz",
+      "integrity": "sha1-IwdjLUwEOCuN+KMvcLiVBG1SdF8=",
+      "dev": true
+    },
+    "deep-is": {
+      "version": "0.1.3",
+      "resolved": "https://registry.npmjs.org/deep-is/-/deep-is-0.1.3.tgz",
+      "integrity": "sha1-s2nW+128E+7PUk+RsHD+7cNXzzQ=",
+      "dev": true
+    },
+    "define-properties": {
+      "version": "1.1.3",
+      "resolved": "https://registry.npmjs.org/define-properties/-/define-properties-1.1.3.tgz",
+      "integrity": "sha512-3MqfYKj2lLzdMSf8ZIZE/V+Zuy+BgD6f164e8K2w7dgnpKArBDerGYpM46IYYcjnkdPNMjPk9A6VFB8+3SKlXQ==",
+      "dev": true,
+      "requires": {
+        "object-keys": "^1.0.12"
+      }
+    },
+    "deglob": {
+      "version": "2.1.1",
+      "resolved": "https://registry.npmjs.org/deglob/-/deglob-2.1.1.tgz",
+      "integrity": "sha512-2kjwuGGonL7gWE1XU4Fv79+vVzpoQCl0V+boMwWtOQJV2AGDabCwez++nB1Nli/8BabAfZQ/UuHPlp6AymKdWw==",
+      "dev": true,
+      "requires": {
+        "find-root": "^1.0.0",
+        "glob": "^7.0.5",
+        "ignore": "^3.0.9",
+        "pkg-config": "^1.1.0",
+        "run-parallel": "^1.1.2",
+        "uniq": "^1.0.1"
+      }
+    },
+    "del": {
+      "version": "2.2.2",
+      "resolved": "https://registry.npmjs.org/del/-/del-2.2.2.tgz",
+      "integrity": "sha1-wSyYHQZ4RshLyvhiz/kw2Qf/0ag=",
+      "dev": true,
+      "requires": {
+        "globby": "^5.0.0",
+        "is-path-cwd": "^1.0.0",
+        "is-path-in-cwd": "^1.0.0",
+        "object-assign": "^4.0.1",
+        "pify": "^2.0.0",
+        "pinkie-promise": "^2.0.0",
+        "rimraf": "^2.2.8"
+      },
+      "dependencies": {
+        "globby": {
+          "version": "5.0.0",
+          "resolved": "https://registry.npmjs.org/globby/-/globby-5.0.0.tgz",
+          "integrity": "sha1-69hGZ8oNuzMLmbz8aOrCvFQ3Dg0=",
+          "dev": true,
+          "requires": {
+            "array-union": "^1.0.1",
+            "arrify": "^1.0.0",
+            "glob": "^7.0.3",
+            "object-assign": "^4.0.1",
+            "pify": "^2.0.0",
+            "pinkie-promise": "^2.0.0"
+          }
+        }
+      }
+    },
+    "doctrine": {
+      "version": "2.1.0",
+      "resolved": "https://registry.npmjs.org/doctrine/-/doctrine-2.1.0.tgz",
+      "integrity": "sha512-35mSku4ZXK0vfCuHEDAwt55dg2jNajHZ1odvF+8SSr82EsZY4QmXfuWso8oEd8zRhVObSN18aM0CjSdoBX7zIw==",
+      "dev": true,
+      "requires": {
+        "esutils": "^2.0.2"
+      }
+    },
+    "dom-serializer": {
+      "version": "0.1.0",
+      "resolved": "https://registry.npmjs.org/dom-serializer/-/dom-serializer-0.1.0.tgz",
+      "integrity": "sha1-BzxpdUbOB4DOI75KKOKT5AvDDII=",
+      "dev": true,
+      "requires": {
+        "domelementtype": "~1.1.1",
+        "entities": "~1.1.1"
+      },
+      "dependencies": {
+        "domelementtype": {
+          "version": "1.1.3",
+          "resolved": "http://registry.npmjs.org/domelementtype/-/domelementtype-1.1.3.tgz",
+          "integrity": "sha1-vSh3PiZCiBrsUVRJJCmcXNgiGFs=",
+          "dev": true
+        }
+      }
+    },
+    "domelementtype": {
+      "version": "1.3.0",
+      "resolved": "http://registry.npmjs.org/domelementtype/-/domelementtype-1.3.0.tgz",
+      "integrity": "sha1-sXrtguirWeUt2cGbF1bg/BhyBMI=",
+      "dev": true
+    },
+    "domhandler": {
+      "version": "2.4.2",
+      "resolved": "https://registry.npmjs.org/domhandler/-/domhandler-2.4.2.tgz",
+      "integrity": "sha512-JiK04h0Ht5u/80fdLMCEmV4zkNh2BcoMFBmZ/91WtYZ8qVXSKjiw7fXMgFPnHcSZgOo3XdinHvmnDUeMf5R4wA==",
+      "dev": true,
+      "requires": {
+        "domelementtype": "1"
+      }
+    },
+    "domutils": {
+      "version": "1.7.0",
+      "resolved": "https://registry.npmjs.org/domutils/-/domutils-1.7.0.tgz",
+      "integrity": "sha512-Lgd2XcJ/NjEw+7tFvfKxOzCYKZsdct5lczQ2ZaQY8Djz7pfAD3Gbp8ySJWtreII/vDlMVmxwa6pHmdxIYgttDg==",
+      "dev": true,
+      "requires": {
+        "dom-serializer": "0",
+        "domelementtype": "1"
+      }
+    },
+    "entities": {
+      "version": "1.1.2",
+      "resolved": "https://registry.npmjs.org/entities/-/entities-1.1.2.tgz",
+      "integrity": "sha512-f2LZMYl1Fzu7YSBKg+RoROelpOaNrcGmE9AZubeDfrCEia483oW4MI4VyFd5VNHIgQ/7qm1I0wUHK1eJnn2y2w==",
+      "dev": true
+    },
+    "error-ex": {
+      "version": "1.3.2",
+      "resolved": "https://registry.npmjs.org/error-ex/-/error-ex-1.3.2.tgz",
+      "integrity": "sha512-7dFHNmqeFSEt2ZBsCriorKnn3Z2pj+fd9kmI6QoWw4//DL+icEBfc0U7qJCisqrTsKTjw4fNFy2pW9OqStD84g==",
+      "dev": true,
+      "requires": {
+        "is-arrayish": "^0.2.1"
+      }
+    },
+    "es-abstract": {
+      "version": "1.12.0",
+      "resolved": "https://registry.npmjs.org/es-abstract/-/es-abstract-1.12.0.tgz",
+      "integrity": "sha512-C8Fx/0jFmV5IPoMOFPA9P9G5NtqW+4cOPit3MIuvR2t7Ag2K15EJTpxnHAYTzL+aYQJIESYeXZmDBfOBE1HcpA==",
+      "dev": true,
+      "requires": {
+        "es-to-primitive": "^1.1.1",
+        "function-bind": "^1.1.1",
+        "has": "^1.0.1",
+        "is-callable": "^1.1.3",
+        "is-regex": "^1.0.4"
+      }
+    },
+    "es-to-primitive": {
+      "version": "1.2.0",
+      "resolved": "https://registry.npmjs.org/es-to-primitive/-/es-to-primitive-1.2.0.tgz",
+      "integrity": "sha512-qZryBOJjV//LaxLTV6UC//WewneB3LcXOL9NP++ozKVXsIIIpm/2c13UDiD9Jp2eThsecw9m3jPqDwTyobcdbg==",
+      "dev": true,
+      "requires": {
+        "is-callable": "^1.1.4",
+        "is-date-object": "^1.0.1",
+        "is-symbol": "^1.0.2"
+      }
+    },
+    "escape-string-regexp": {
+      "version": "1.0.5",
+      "resolved": "https://registry.npmjs.org/escape-string-regexp/-/escape-string-regexp-1.0.5.tgz",
+      "integrity": "sha1-G2HAViGQqN/2rjuyzwIAyhMLhtQ=",
+      "dev": true
+    },
+    "eslint": {
+      "version": "5.4.0",
+      "resolved": "https://registry.npmjs.org/eslint/-/eslint-5.4.0.tgz",
+      "integrity": "sha512-UIpL91XGex3qtL6qwyCQJar2j3osKxK9e3ano3OcGEIRM4oWIpCkDg9x95AXEC2wMs7PnxzOkPZ2gq+tsMS9yg==",
+      "dev": true,
+      "requires": {
+        "ajv": "^6.5.0",
+        "babel-code-frame": "^6.26.0",
+        "chalk": "^2.1.0",
+        "cross-spawn": "^6.0.5",
+        "debug": "^3.1.0",
+        "doctrine": "^2.1.0",
+        "eslint-scope": "^4.0.0",
+        "eslint-utils": "^1.3.1",
+        "eslint-visitor-keys": "^1.0.0",
+        "espree": "^4.0.0",
+        "esquery": "^1.0.1",
+        "esutils": "^2.0.2",
+        "file-entry-cache": "^2.0.0",
+        "functional-red-black-tree": "^1.0.1",
+        "glob": "^7.1.2",
+        "globals": "^11.7.0",
+        "ignore": "^4.0.2",
+        "imurmurhash": "^0.1.4",
+        "inquirer": "^5.2.0",
+        "is-resolvable": "^1.1.0",
+        "js-yaml": "^3.11.0",
+        "json-stable-stringify-without-jsonify": "^1.0.1",
+        "levn": "^0.3.0",
+        "lodash": "^4.17.5",
+        "minimatch": "^3.0.4",
+        "mkdirp": "^0.5.1",
+        "natural-compare": "^1.4.0",
+        "optionator": "^0.8.2",
+        "path-is-inside": "^1.0.2",
+        "pluralize": "^7.0.0",
+        "progress": "^2.0.0",
+        "regexpp": "^2.0.0",
+        "require-uncached": "^1.0.3",
+        "semver": "^5.5.0",
+        "strip-ansi": "^4.0.0",
+        "strip-json-comments": "^2.0.1",
+        "table": "^4.0.3",
+        "text-table": "^0.2.0"
+      },
+      "dependencies": {
+        "ajv": {
+          "version": "6.5.4",
+          "resolved": "https://registry.npmjs.org/ajv/-/ajv-6.5.4.tgz",
+          "integrity": "sha512-4Wyjt8+t6YszqaXnLDfMmG/8AlO5Zbcsy3ATHncCzjW/NoPzAId8AK6749Ybjmdt+kUY1gP60fCu46oDxPv/mg==",
+          "dev": true,
+          "requires": {
+            "fast-deep-equal": "^2.0.1",
+            "fast-json-stable-stringify": "^2.0.0",
+            "json-schema-traverse": "^0.4.1",
+            "uri-js": "^4.2.2"
+          }
+        },
+        "ansi-regex": {
+          "version": "3.0.0",
+          "resolved": "https://registry.npmjs.org/ansi-regex/-/ansi-regex-3.0.0.tgz",
+          "integrity": "sha1-7QMXwyIGT3lGbAKWa922Bas32Zg=",
+          "dev": true
+        },
+        "chardet": {
+          "version": "0.4.2",
+          "resolved": "https://registry.npmjs.org/chardet/-/chardet-0.4.2.tgz",
+          "integrity": "sha1-tUc7M9yXxCTl2Y3IfVXU2KKci/I=",
+          "dev": true
+        },
+        "debug": {
+          "version": "3.2.6",
+          "resolved": "https://registry.npmjs.org/debug/-/debug-3.2.6.tgz",
+          "integrity": "sha512-mel+jf7nrtEl5Pn1Qx46zARXKDpBbvzezse7p7LqINmdoIk8PYP5SySaxEmYv6TZ0JyEKA1hsCId6DIhgITtWQ==",
+          "dev": true,
+          "requires": {
+            "ms": "^2.1.1"
+          }
+        },
+        "external-editor": {
+          "version": "2.2.0",
+          "resolved": "http://registry.npmjs.org/external-editor/-/external-editor-2.2.0.tgz",
+          "integrity": "sha512-bSn6gvGxKt+b7+6TKEv1ZycHleA7aHhRHyAqJyp5pbUFuYYNIzpZnQDk7AsYckyWdEnTeAnay0aCy2aV6iTk9A==",
+          "dev": true,
+          "requires": {
+            "chardet": "^0.4.0",
+            "iconv-lite": "^0.4.17",
+            "tmp": "^0.0.33"
+          }
+        },
+        "fast-deep-equal": {
+          "version": "2.0.1",
+          "resolved": "https://registry.npmjs.org/fast-deep-equal/-/fast-deep-equal-2.0.1.tgz",
+          "integrity": "sha1-ewUhjd+WZ79/Nwv3/bLLFf3Qqkk=",
+          "dev": true
+        },
+        "ignore": {
+          "version": "4.0.6",
+          "resolved": "https://registry.npmjs.org/ignore/-/ignore-4.0.6.tgz",
+          "integrity": "sha512-cyFDKrqc/YdcWFniJhzI42+AzS+gNwmUzOSFcRCQYwySuBBBy/KjuxWLZ/FHEH6Moq1NizMOBWyTcv8O4OZIMg==",
+          "dev": true
+        },
+        "inquirer": {
+          "version": "5.2.0",
+          "resolved": "http://registry.npmjs.org/inquirer/-/inquirer-5.2.0.tgz",
+          "integrity": "sha512-E9BmnJbAKLPGonz0HeWHtbKf+EeSP93paWO3ZYoUpq/aowXvYGjjCSuashhXPpzbArIjBbji39THkxTz9ZeEUQ==",
+          "dev": true,
+          "requires": {
+            "ansi-escapes": "^3.0.0",
+            "chalk": "^2.0.0",
+            "cli-cursor": "^2.1.0",
+            "cli-width": "^2.0.0",
+            "external-editor": "^2.1.0",
+            "figures": "^2.0.0",
+            "lodash": "^4.3.0",
+            "mute-stream": "0.0.7",
+            "run-async": "^2.2.0",
+            "rxjs": "^5.5.2",
+            "string-width": "^2.1.0",
+            "strip-ansi": "^4.0.0",
+            "through": "^2.3.6"
+          }
+        },
+        "is-fullwidth-code-point": {
+          "version": "2.0.0",
+          "resolved": "https://registry.npmjs.org/is-fullwidth-code-point/-/is-fullwidth-code-point-2.0.0.tgz",
+          "integrity": "sha1-o7MKXE8ZkYMWeqq5O+764937ZU8=",
+          "dev": true
+        },
+        "json-schema-traverse": {
+          "version": "0.4.1",
+          "resolved": "https://registry.npmjs.org/json-schema-traverse/-/json-schema-traverse-0.4.1.tgz",
+          "integrity": "sha512-xbbCH5dCYU5T8LcEhhuh7HJ88HXuW3qsI3Y0zOZFKfZEHcpWiHU/Jxzk629Brsab/mMiHQti9wMP+845RPe3Vg==",
+          "dev": true
+        },
+        "ms": {
+          "version": "2.1.1",
+          "resolved": "https://registry.npmjs.org/ms/-/ms-2.1.1.tgz",
+          "integrity": "sha512-tgp+dl5cGk28utYktBsrFqA7HKgrhgPsg6Z/EfhWI4gl1Hwq8B/GmY/0oXZ6nF8hDVesS/FpnYaD/kOWhYQvyg==",
+          "dev": true
+        },
+        "rxjs": {
+          "version": "5.5.12",
+          "resolved": "https://registry.npmjs.org/rxjs/-/rxjs-5.5.12.tgz",
+          "integrity": "sha512-xx2itnL5sBbqeeiVgNPVuQQ1nC8Jp2WfNJhXWHmElW9YmrpS9UVnNzhP3EH3HFqexO5Tlp8GhYY+WEcqcVMvGw==",
+          "dev": true,
+          "requires": {
+            "symbol-observable": "1.0.1"
+          }
+        },
+        "string-width": {
+          "version": "2.1.1",
+          "resolved": "https://registry.npmjs.org/string-width/-/string-width-2.1.1.tgz",
+          "integrity": "sha512-nOqH59deCq9SRHlxq1Aw85Jnt4w6KvLKqWVik6oA9ZklXLNIOlqg4F2yrT1MVaTjAqvVwdfeZ7w7aCvJD7ugkw==",
+          "dev": true,
+          "requires": {
+            "is-fullwidth-code-point": "^2.0.0",
+            "strip-ansi": "^4.0.0"
+          }
+        },
+        "strip-ansi": {
+          "version": "4.0.0",
+          "resolved": "https://registry.npmjs.org/strip-ansi/-/strip-ansi-4.0.0.tgz",
+          "integrity": "sha1-qEeQIusaw2iocTibY1JixQXuNo8=",
+          "dev": true,
+          "requires": {
+            "ansi-regex": "^3.0.0"
+          }
+        }
+      }
+    },
+    "eslint-config-standard": {
+      "version": "12.0.0",
+      "resolved": "https://registry.npmjs.org/eslint-config-standard/-/eslint-config-standard-12.0.0.tgz",
+      "integrity": "sha512-COUz8FnXhqFitYj4DTqHzidjIL/t4mumGZto5c7DrBpvWoie+Sn3P4sLEzUGeYhRElWuFEf8K1S1EfvD1vixCQ==",
+      "dev": true
+    },
+    "eslint-config-standard-jsx": {
+      "version": "6.0.2",
+      "resolved": "https://registry.npmjs.org/eslint-config-standard-jsx/-/eslint-config-standard-jsx-6.0.2.tgz",
+      "integrity": "sha512-D+YWAoXw+2GIdbMBRAzWwr1ZtvnSf4n4yL0gKGg7ShUOGXkSOLerI17K4F6LdQMJPNMoWYqepzQD/fKY+tXNSg==",
+      "dev": true
+    },
+    "eslint-import-resolver-node": {
+      "version": "0.3.2",
+      "resolved": "https://registry.npmjs.org/eslint-import-resolver-node/-/eslint-import-resolver-node-0.3.2.tgz",
+      "integrity": "sha512-sfmTqJfPSizWu4aymbPr4Iidp5yKm8yDkHp+Ir3YiTHiiDfxh69mOUsmiqW6RZ9zRXFaF64GtYmN7e+8GHBv6Q==",
+      "dev": true,
+      "requires": {
+        "debug": "^2.6.9",
+        "resolve": "^1.5.0"
+      }
+    },
+    "eslint-module-utils": {
+      "version": "2.2.0",
+      "resolved": "https://registry.npmjs.org/eslint-module-utils/-/eslint-module-utils-2.2.0.tgz",
+      "integrity": "sha1-snA2LNiLGkitMIl2zn+lTphBF0Y=",
+      "dev": true,
+      "requires": {
+        "debug": "^2.6.8",
+        "pkg-dir": "^1.0.0"
+      }
+    },
+    "eslint-plugin-es": {
+      "version": "1.3.1",
+      "resolved": "https://registry.npmjs.org/eslint-plugin-es/-/eslint-plugin-es-1.3.1.tgz",
+      "integrity": "sha512-9XcVyZiQRVeFjqHw8qHNDAZcQLqaHlOGGpeYqzYh8S4JYCWTCO3yzyen8yVmA5PratfzTRWDwCOFphtDEG+w/w==",
+      "dev": true,
+      "requires": {
+        "eslint-utils": "^1.3.0",
+        "regexpp": "^2.0.0"
+      }
+    },
+    "eslint-plugin-html": {
+      "version": "4.0.6",
+      "resolved": "https://registry.npmjs.org/eslint-plugin-html/-/eslint-plugin-html-4.0.6.tgz",
+      "integrity": "sha512-nj6A9oK+7BKnMm0E7dMRH3r75BfpkXtcVIb3pFC4AcDdBTNyg2NGxHXyFNT1emW4VsR7P2SZvRXXQtUR+kY08w==",
+      "dev": true,
+      "requires": {
+        "htmlparser2": "^3.8.2"
+      }
+    },
+    "eslint-plugin-import": {
+      "version": "2.14.0",
+      "resolved": "https://registry.npmjs.org/eslint-plugin-import/-/eslint-plugin-import-2.14.0.tgz",
+      "integrity": "sha512-FpuRtniD/AY6sXByma2Wr0TXvXJ4nA/2/04VPlfpmUDPOpOY264x+ILiwnrk/k4RINgDAyFZByxqPUbSQ5YE7g==",
+      "dev": true,
+      "requires": {
+        "contains-path": "^0.1.0",
+        "debug": "^2.6.8",
+        "doctrine": "1.5.0",
+        "eslint-import-resolver-node": "^0.3.1",
+        "eslint-module-utils": "^2.2.0",
+        "has": "^1.0.1",
+        "lodash": "^4.17.4",
+        "minimatch": "^3.0.3",
+        "read-pkg-up": "^2.0.0",
+        "resolve": "^1.6.0"
+      },
+      "dependencies": {
+        "doctrine": {
+          "version": "1.5.0",
+          "resolved": "https://registry.npmjs.org/doctrine/-/doctrine-1.5.0.tgz",
+          "integrity": "sha1-N53Ocw9hZvds76TmcHoVmwLFpvo=",
+          "dev": true,
+          "requires": {
+            "esutils": "^2.0.2",
+            "isarray": "^1.0.0"
+          }
+        },
+        "find-up": {
+          "version": "2.1.0",
+          "resolved": "https://registry.npmjs.org/find-up/-/find-up-2.1.0.tgz",
+          "integrity": "sha1-RdG35QbHF93UgndaK3eSCjwMV6c=",
+          "dev": true,
+          "requires": {
+            "locate-path": "^2.0.0"
+          }
+        },
+        "load-json-file": {
+          "version": "2.0.0",
+          "resolved": "http://registry.npmjs.org/load-json-file/-/load-json-file-2.0.0.tgz",
+          "integrity": "sha1-eUfkIUmvgNaWy/eXvKq8/h/inKg=",
+          "dev": true,
+          "requires": {
+            "graceful-fs": "^4.1.2",
+            "parse-json": "^2.2.0",
+            "pify": "^2.0.0",
+            "strip-bom": "^3.0.0"
+          }
+        },
+        "path-type": {
+          "version": "2.0.0",
+          "resolved": "https://registry.npmjs.org/path-type/-/path-type-2.0.0.tgz",
+          "integrity": "sha1-8BLMuEFbcJb8LaoQVMPXI4lZTHM=",
+          "dev": true,
+          "requires": {
+            "pify": "^2.0.0"
+          }
+        },
+        "read-pkg": {
+          "version": "2.0.0",
+          "resolved": "https://registry.npmjs.org/read-pkg/-/read-pkg-2.0.0.tgz",
+          "integrity": "sha1-jvHAYjxqbbDcZxPEv6xGMysjaPg=",
+          "dev": true,
+          "requires": {
+            "load-json-file": "^2.0.0",
+            "normalize-package-data": "^2.3.2",
+            "path-type": "^2.0.0"
+          }
+        },
+        "read-pkg-up": {
+          "version": "2.0.0",
+          "resolved": "https://registry.npmjs.org/read-pkg-up/-/read-pkg-up-2.0.0.tgz",
+          "integrity": "sha1-a3KoBImE4MQeeVEP1en6mbO1Sb4=",
+          "dev": true,
+          "requires": {
+            "find-up": "^2.0.0",
+            "read-pkg": "^2.0.0"
+          }
+        },
+        "strip-bom": {
+          "version": "3.0.0",
+          "resolved": "https://registry.npmjs.org/strip-bom/-/strip-bom-3.0.0.tgz",
+          "integrity": "sha1-IzTBjpx1n3vdVv3vfprj1YjmjtM=",
+          "dev": true
+        }
+      }
+    },
+    "eslint-plugin-node": {
+      "version": "7.0.1",
+      "resolved": "https://registry.npmjs.org/eslint-plugin-node/-/eslint-plugin-node-7.0.1.tgz",
+      "integrity": "sha512-lfVw3TEqThwq0j2Ba/Ckn2ABdwmL5dkOgAux1rvOk6CO7A6yGyPI2+zIxN6FyNkp1X1X/BSvKOceD6mBWSj4Yw==",
+      "dev": true,
+      "requires": {
+        "eslint-plugin-es": "^1.3.1",
+        "eslint-utils": "^1.3.1",
+        "ignore": "^4.0.2",
+        "minimatch": "^3.0.4",
+        "resolve": "^1.8.1",
+        "semver": "^5.5.0"
+      },
+      "dependencies": {
+        "ignore": {
+          "version": "4.0.6",
+          "resolved": "https://registry.npmjs.org/ignore/-/ignore-4.0.6.tgz",
+          "integrity": "sha512-cyFDKrqc/YdcWFniJhzI42+AzS+gNwmUzOSFcRCQYwySuBBBy/KjuxWLZ/FHEH6Moq1NizMOBWyTcv8O4OZIMg==",
+          "dev": true
+        }
+      }
+    },
+    "eslint-plugin-promise": {
+      "version": "4.0.1",
+      "resolved": "https://registry.npmjs.org/eslint-plugin-promise/-/eslint-plugin-promise-4.0.1.tgz",
+      "integrity": "sha512-Si16O0+Hqz1gDHsys6RtFRrW7cCTB6P7p3OJmKp3Y3dxpQE2qwOA7d3xnV+0mBmrPoi0RBnxlCKvqu70te6wjg==",
+      "dev": true
+    },
+    "eslint-plugin-react": {
+      "version": "7.11.1",
+      "resolved": "https://registry.npmjs.org/eslint-plugin-react/-/eslint-plugin-react-7.11.1.tgz",
+      "integrity": "sha512-cVVyMadRyW7qsIUh3FHp3u6QHNhOgVrLQYdQEB1bPWBsgbNCHdFAeNMquBMCcZJu59eNthX053L70l7gRt4SCw==",
+      "dev": true,
+      "requires": {
+        "array-includes": "^3.0.3",
+        "doctrine": "^2.1.0",
+        "has": "^1.0.3",
+        "jsx-ast-utils": "^2.0.1",
+        "prop-types": "^15.6.2"
+      }
+    },
+    "eslint-plugin-standard": {
+      "version": "4.0.0",
+      "resolved": "https://registry.npmjs.org/eslint-plugin-standard/-/eslint-plugin-standard-4.0.0.tgz",
+      "integrity": "sha512-OwxJkR6TQiYMmt1EsNRMe5qG3GsbjlcOhbGUBY4LtavF9DsLaTcoR+j2Tdjqi23oUwKNUqX7qcn5fPStafMdlA==",
+      "dev": true
+    },
+    "eslint-scope": {
+      "version": "4.0.0",
+      "resolved": "https://registry.npmjs.org/eslint-scope/-/eslint-scope-4.0.0.tgz",
+      "integrity": "sha512-1G6UTDi7Jc1ELFwnR58HV4fK9OQK4S6N985f166xqXxpjU6plxFISJa2Ba9KCQuFa8RCnj/lSFJbHo7UFDBnUA==",
+      "dev": true,
+      "requires": {
+        "esrecurse": "^4.1.0",
+        "estraverse": "^4.1.1"
+      }
+    },
+    "eslint-utils": {
+      "version": "1.3.1",
+      "resolved": "https://registry.npmjs.org/eslint-utils/-/eslint-utils-1.3.1.tgz",
+      "integrity": "sha512-Z7YjnIldX+2XMcjr7ZkgEsOj/bREONV60qYeB/bjMAqqqZ4zxKyWX+BOUkdmRmA9riiIPVvo5x86m5elviOk0Q==",
+      "dev": true
+    },
+    "eslint-visitor-keys": {
+      "version": "1.0.0",
+      "resolved": "https://registry.npmjs.org/eslint-visitor-keys/-/eslint-visitor-keys-1.0.0.tgz",
+      "integrity": "sha512-qzm/XxIbxm/FHyH341ZrbnMUpe+5Bocte9xkmFMzPMjRaZMcXww+MpBptFvtU+79L362nqiLhekCxCxDPaUMBQ==",
+      "dev": true
+    },
+    "espree": {
+      "version": "4.1.0",
+      "resolved": "https://registry.npmjs.org/espree/-/espree-4.1.0.tgz",
+      "integrity": "sha512-I5BycZW6FCVIub93TeVY1s7vjhP9CY6cXCznIRfiig7nRviKZYdRnj/sHEWC6A7WE9RDWOFq9+7OsWSYz8qv2w==",
+      "dev": true,
+      "requires": {
+        "acorn": "^6.0.2",
+        "acorn-jsx": "^5.0.0",
+        "eslint-visitor-keys": "^1.0.0"
+      }
+    },
+    "esprima": {
+      "version": "4.0.1",
+      "resolved": "https://registry.npmjs.org/esprima/-/esprima-4.0.1.tgz",
+      "integrity": "sha512-eGuFFw7Upda+g4p+QHvnW0RyTX/SVeJBDM/gCtMARO0cLuT2HcEKnTPvhjV6aGeqrCB/sbNop0Kszm0jsaWU4A==",
+      "dev": true
+    },
+    "esquery": {
+      "version": "1.0.1",
+      "resolved": "https://registry.npmjs.org/esquery/-/esquery-1.0.1.tgz",
+      "integrity": "sha512-SmiyZ5zIWH9VM+SRUReLS5Q8a7GxtRdxEBVZpm98rJM7Sb+A9DVCndXfkeFUd3byderg+EbDkfnevfCwynWaNA==",
+      "dev": true,
+      "requires": {
+        "estraverse": "^4.0.0"
+      }
+    },
+    "esrecurse": {
+      "version": "4.2.1",
+      "resolved": "https://registry.npmjs.org/esrecurse/-/esrecurse-4.2.1.tgz",
+      "integrity": "sha512-64RBB++fIOAXPw3P9cy89qfMlvZEXZkqqJkjqqXIvzP5ezRZjW+lPWjw35UX/3EhUPFYbg5ER4JYgDw4007/DQ==",
+      "dev": true,
+      "requires": {
+        "estraverse": "^4.1.0"
+      }
+    },
+    "estraverse": {
+      "version": "4.2.0",
+      "resolved": "https://registry.npmjs.org/estraverse/-/estraverse-4.2.0.tgz",
+      "integrity": "sha1-De4/7TH81GlhjOc0IJn8GvoL2xM=",
+      "dev": true
+    },
+    "esutils": {
+      "version": "2.0.2",
+      "resolved": "https://registry.npmjs.org/esutils/-/esutils-2.0.2.tgz",
+      "integrity": "sha1-Cr9PHKpbyx96nYrMbepPqqBLrJs=",
+      "dev": true
+    },
+    "fast-json-stable-stringify": {
+      "version": "2.0.0",
+      "resolved": "https://registry.npmjs.org/fast-json-stable-stringify/-/fast-json-stable-stringify-2.0.0.tgz",
+      "integrity": "sha1-1RQsDK7msRifh9OnYREGT4bIu/I=",
+      "dev": true
+    },
+    "fast-levenshtein": {
+      "version": "2.0.6",
+      "resolved": "https://registry.npmjs.org/fast-levenshtein/-/fast-levenshtein-2.0.6.tgz",
+      "integrity": "sha1-PYpcZog6FqMMqGQ+hR8Zuqd5eRc=",
+      "dev": true
+    },
+    "figures": {
+      "version": "2.0.0",
+      "resolved": "https://registry.npmjs.org/figures/-/figures-2.0.0.tgz",
+      "integrity": "sha1-OrGi0qYsi/tDGgyUy3l6L84nyWI=",
+      "dev": true,
+      "requires": {
+        "escape-string-regexp": "^1.0.5"
+      }
+    },
+    "file-entry-cache": {
+      "version": "2.0.0",
+      "resolved": "https://registry.npmjs.org/file-entry-cache/-/file-entry-cache-2.0.0.tgz",
+      "integrity": "sha1-w5KZDD5oR4PYOLjISkXYoEhFg2E=",
+      "dev": true,
+      "requires": {
+        "flat-cache": "^1.2.1",
+        "object-assign": "^4.0.1"
+      }
+    },
+    "find-root": {
+      "version": "1.1.0",
+      "resolved": "https://registry.npmjs.org/find-root/-/find-root-1.1.0.tgz",
+      "integrity": "sha512-NKfW6bec6GfKc0SGx1e07QZY9PE99u0Bft/0rzSD5k3sO/vwkVUpDUKVm5Gpp5Ue3YfShPFTX2070tDs5kB9Ng==",
+      "dev": true
+    },
+    "find-up": {
+      "version": "1.1.2",
+      "resolved": "https://registry.npmjs.org/find-up/-/find-up-1.1.2.tgz",
+      "integrity": "sha1-ay6YIrGizgpgq2TWEOzK1TyyTQ8=",
+      "dev": true,
+      "requires": {
+        "path-exists": "^2.0.0",
+        "pinkie-promise": "^2.0.0"
+      }
+    },
+    "flat-cache": {
+      "version": "1.3.0",
+      "resolved": "https://registry.npmjs.org/flat-cache/-/flat-cache-1.3.0.tgz",
+      "integrity": "sha1-0wMLMrOBVPTjt+nHCfSQ9++XxIE=",
+      "dev": true,
+      "requires": {
+        "circular-json": "^0.3.1",
+        "del": "^2.0.2",
+        "graceful-fs": "^4.1.2",
+        "write": "^0.2.1"
+      }
+    },
+    "fs.realpath": {
+      "version": "1.0.0",
+      "resolved": "https://registry.npmjs.org/fs.realpath/-/fs.realpath-1.0.0.tgz",
+      "integrity": "sha1-FQStJSMVjKpA20onh8sBQRmU6k8=",
+      "dev": true
+    },
+    "function-bind": {
+      "version": "1.1.1",
+      "resolved": "https://registry.npmjs.org/function-bind/-/function-bind-1.1.1.tgz",
+      "integrity": "sha512-yIovAzMX49sF8Yl58fSCWJ5svSLuaibPxXQJFLmBObTuCr0Mf1KiPopGM9NiFjiYBCbfaa2Fh6breQ6ANVTI0A==",
+      "dev": true
+    },
+    "functional-red-black-tree": {
+      "version": "1.0.1",
+      "resolved": "https://registry.npmjs.org/functional-red-black-tree/-/functional-red-black-tree-1.0.1.tgz",
+      "integrity": "sha1-GwqzvVU7Kg1jmdKcDj6gslIHgyc=",
+      "dev": true
+    },
+    "glob": {
+      "version": "7.1.3",
+      "resolved": "https://registry.npmjs.org/glob/-/glob-7.1.3.tgz",
+      "integrity": "sha512-vcfuiIxogLV4DlGBHIUOwI0IbrJ8HWPc4MU7HzviGeNho/UJDfi6B5p3sHeWIQ0KGIU0Jpxi5ZHxemQfLkkAwQ==",
+      "dev": true,
+      "requires": {
+        "fs.realpath": "^1.0.0",
+        "inflight": "^1.0.4",
+        "inherits": "2",
+        "minimatch": "^3.0.4",
+        "once": "^1.3.0",
+        "path-is-absolute": "^1.0.0"
+      }
+    },
+    "globals": {
+      "version": "11.8.0",
+      "resolved": "https://registry.npmjs.org/globals/-/globals-11.8.0.tgz",
+      "integrity": "sha512-io6LkyPVuzCHBSQV9fmOwxZkUk6nIaGmxheLDgmuFv89j0fm2aqDbIXKAGfzCMHqz3HLF2Zf8WSG6VqMh2qFmA==",
+      "dev": true
+    },
+    "graceful-fs": {
+      "version": "4.1.11",
+      "resolved": "https://registry.npmjs.org/graceful-fs/-/graceful-fs-4.1.11.tgz",
+      "integrity": "sha1-Dovf5NHduIVNZOBOp8AOKgJuVlg=",
+      "dev": true
+    },
+    "has": {
+      "version": "1.0.3",
+      "resolved": "https://registry.npmjs.org/has/-/has-1.0.3.tgz",
+      "integrity": "sha512-f2dvO0VU6Oej7RkWJGrehjbzMAjFp5/VKPp5tTpWIV4JHHZK1/BxbFRtf/siA2SWTe09caDmVtYYzWEIbBS4zw==",
+      "dev": true,
+      "requires": {
+        "function-bind": "^1.1.1"
+      }
+    },
+    "has-ansi": {
+      "version": "2.0.0",
+      "resolved": "https://registry.npmjs.org/has-ansi/-/has-ansi-2.0.0.tgz",
+      "integrity": "sha1-NPUEnOHs3ysGSa8+8k5F7TVBbZE=",
+      "dev": true,
+      "requires": {
+        "ansi-regex": "^2.0.0"
+      }
+    },
+    "has-flag": {
+      "version": "3.0.0",
+      "resolved": "https://registry.npmjs.org/has-flag/-/has-flag-3.0.0.tgz",
+      "integrity": "sha1-tdRU3CGZriJWmfNGfloH87lVuv0=",
+      "dev": true
+    },
+    "has-symbols": {
+      "version": "1.0.0",
+      "resolved": "https://registry.npmjs.org/has-symbols/-/has-symbols-1.0.0.tgz",
+      "integrity": "sha1-uhqPGvKg/DllD1yFA2dwQSIGO0Q=",
+      "dev": true
+    },
+    "hosted-git-info": {
+      "version": "2.7.1",
+      "resolved": "https://registry.npmjs.org/hosted-git-info/-/hosted-git-info-2.7.1.tgz",
+      "integrity": "sha512-7T/BxH19zbcCTa8XkMlbK5lTo1WtgkFi3GvdWEyNuc4Vex7/9Dqbnpsf4JMydcfj9HCg4zUWFTL3Za6lapg5/w==",
+      "dev": true
+    },
+    "htmlparser2": {
+      "version": "3.10.0",
+      "resolved": "https://registry.npmjs.org/htmlparser2/-/htmlparser2-3.10.0.tgz",
+      "integrity": "sha512-J1nEUGv+MkXS0weHNWVKJJ+UrLfePxRWpN3C9bEi9fLxL2+ggW94DQvgYVXsaT30PGwYRIZKNZXuyMhp3Di4bQ==",
+      "dev": true,
+      "requires": {
+        "domelementtype": "^1.3.0",
+        "domhandler": "^2.3.0",
+        "domutils": "^1.5.1",
+        "entities": "^1.1.1",
+        "inherits": "^2.0.1",
+        "readable-stream": "^3.0.6"
+      },
+      "dependencies": {
+        "readable-stream": {
+          "version": "3.0.6",
+          "resolved": "https://registry.npmjs.org/readable-stream/-/readable-stream-3.0.6.tgz",
+          "integrity": "sha512-9E1oLoOWfhSXHGv6QlwXJim7uNzd9EVlWK+21tCU9Ju/kR0/p2AZYPz4qSchgO8PlLIH4FpZYfzwS+rEksZjIg==",
+          "dev": true,
+          "requires": {
+            "inherits": "^2.0.3",
+            "string_decoder": "^1.1.1",
+            "util-deprecate": "^1.0.1"
+          }
+        }
+      }
+    },
+    "iconv-lite": {
+      "version": "0.4.24",
+      "resolved": "https://registry.npmjs.org/iconv-lite/-/iconv-lite-0.4.24.tgz",
+      "integrity": "sha512-v3MXnZAcvnywkTUEZomIActle7RXXeedOR31wwl7VlyoXO4Qi9arvSenNQWne1TcRwhCL1HwLI21bEqdpj8/rA==",
+      "dev": true,
+      "requires": {
+        "safer-buffer": ">= 2.1.2 < 3"
+      }
+    },
+    "ignore": {
+      "version": "3.3.10",
+      "resolved": "https://registry.npmjs.org/ignore/-/ignore-3.3.10.tgz",
+      "integrity": "sha512-Pgs951kaMm5GXP7MOvxERINe3gsaVjUWFm+UZPSq9xYriQAksyhg0csnS0KXSNRD5NmNdapXEpjxG49+AKh/ug==",
+      "dev": true
+    },
+    "imurmurhash": {
+      "version": "0.1.4",
+      "resolved": "https://registry.npmjs.org/imurmurhash/-/imurmurhash-0.1.4.tgz",
+      "integrity": "sha1-khi5srkoojixPcT7a21XbyMUU+o=",
+      "dev": true
+    },
+    "inflight": {
+      "version": "1.0.6",
+      "resolved": "https://registry.npmjs.org/inflight/-/inflight-1.0.6.tgz",
+      "integrity": "sha1-Sb1jMdfQLQwJvJEKEHW6gWW1bfk=",
+      "dev": true,
+      "requires": {
+        "once": "^1.3.0",
+        "wrappy": "1"
+      }
+    },
+    "inherits": {
+      "version": "2.0.3",
+      "resolved": "https://registry.npmjs.org/inherits/-/inherits-2.0.3.tgz",
+      "integrity": "sha1-Yzwsg+PaQqUC9SRmAiSA9CCCYd4=",
+      "dev": true
+    },
+    "is-arrayish": {
+      "version": "0.2.1",
+      "resolved": "https://registry.npmjs.org/is-arrayish/-/is-arrayish-0.2.1.tgz",
+      "integrity": "sha1-d8mYQFJ6qOyxqLppe4BkWnqSap0=",
+      "dev": true
+    },
+    "is-builtin-module": {
+      "version": "1.0.0",
+      "resolved": "http://registry.npmjs.org/is-builtin-module/-/is-builtin-module-1.0.0.tgz",
+      "integrity": "sha1-VAVy0096wxGfj3bDDLwbHgN6/74=",
+      "dev": true,
+      "requires": {
+        "builtin-modules": "^1.0.0"
+      }
+    },
+    "is-callable": {
+      "version": "1.1.4",
+      "resolved": "https://registry.npmjs.org/is-callable/-/is-callable-1.1.4.tgz",
+      "integrity": "sha512-r5p9sxJjYnArLjObpjA4xu5EKI3CuKHkJXMhT7kwbpUyIFD1n5PMAsoPvWnvtZiNz7LjkYDRZhd7FlI0eMijEA==",
+      "dev": true
+    },
+    "is-date-object": {
+      "version": "1.0.1",
+      "resolved": "https://registry.npmjs.org/is-date-object/-/is-date-object-1.0.1.tgz",
+      "integrity": "sha1-mqIOtq7rv/d/vTPnTKAbM1gdOhY=",
+      "dev": true
+    },
+    "is-path-cwd": {
+      "version": "1.0.0",
+      "resolved": "https://registry.npmjs.org/is-path-cwd/-/is-path-cwd-1.0.0.tgz",
+      "integrity": "sha1-0iXsIxMuie3Tj9p2dHLmLmXxEG0=",
+      "dev": true
+    },
+    "is-path-in-cwd": {
+      "version": "1.0.1",
+      "resolved": "https://registry.npmjs.org/is-path-in-cwd/-/is-path-in-cwd-1.0.1.tgz",
+      "integrity": "sha512-FjV1RTW48E7CWM7eE/J2NJvAEEVektecDBVBE5Hh3nM1Jd0kvhHtX68Pr3xsDf857xt3Y4AkwVULK1Vku62aaQ==",
+      "dev": true,
+      "requires": {
+        "is-path-inside": "^1.0.0"
+      }
+    },
+    "is-path-inside": {
+      "version": "1.0.1",
+      "resolved": "https://registry.npmjs.org/is-path-inside/-/is-path-inside-1.0.1.tgz",
+      "integrity": "sha1-jvW33lBDej/cprToZe96pVy0gDY=",
+      "dev": true,
+      "requires": {
+        "path-is-inside": "^1.0.1"
+      }
+    },
+    "is-promise": {
+      "version": "2.1.0",
+      "resolved": "https://registry.npmjs.org/is-promise/-/is-promise-2.1.0.tgz",
+      "integrity": "sha1-eaKp7OfwlugPNtKy87wWwf9L8/o=",
+      "dev": true
+    },
+    "is-regex": {
+      "version": "1.0.4",
+      "resolved": "https://registry.npmjs.org/is-regex/-/is-regex-1.0.4.tgz",
+      "integrity": "sha1-VRdIm1RwkbCTDglWVM7SXul+lJE=",
+      "dev": true,
+      "requires": {
+        "has": "^1.0.1"
+      }
+    },
+    "is-resolvable": {
+      "version": "1.1.0",
+      "resolved": "https://registry.npmjs.org/is-resolvable/-/is-resolvable-1.1.0.tgz",
+      "integrity": "sha512-qgDYXFSR5WvEfuS5dMj6oTMEbrrSaM0CrFk2Yiq/gXnBvD9pMa2jGXxyhGLfvhZpuMZe18CJpFxAt3CRs42NMg==",
+      "dev": true
+    },
+    "is-symbol": {
+      "version": "1.0.2",
+      "resolved": "https://registry.npmjs.org/is-symbol/-/is-symbol-1.0.2.tgz",
+      "integrity": "sha512-HS8bZ9ox60yCJLH9snBpIwv9pYUAkcuLhSA1oero1UB5y9aiQpRA8y2ex945AOtCZL1lJDeIk3G5LthswI46Lw==",
+      "dev": true,
+      "requires": {
+        "has-symbols": "^1.0.0"
+      }
+    },
+    "isarray": {
+      "version": "1.0.0",
+      "resolved": "https://registry.npmjs.org/isarray/-/isarray-1.0.0.tgz",
+      "integrity": "sha1-u5NdSFgsuhaMBoNJV6VKPgcSTxE=",
+      "dev": true
+    },
+    "isexe": {
+      "version": "2.0.0",
+      "resolved": "https://registry.npmjs.org/isexe/-/isexe-2.0.0.tgz",
+      "integrity": "sha1-6PvzdNxVb/iUehDcsFctYz8s+hA=",
+      "dev": true
+    },
+    "js-tokens": {
+      "version": "3.0.2",
+      "resolved": "https://registry.npmjs.org/js-tokens/-/js-tokens-3.0.2.tgz",
+      "integrity": "sha1-mGbfOVECEw449/mWvOtlRDIJwls=",
+      "dev": true
+    },
+    "js-yaml": {
+      "version": "3.12.0",
+      "resolved": "https://registry.npmjs.org/js-yaml/-/js-yaml-3.12.0.tgz",
+      "integrity": "sha512-PIt2cnwmPfL4hKNwqeiuz4bKfnzHTBv6HyVgjahA6mPLwPDzjDWrplJBMjHUFxku/N3FlmrbyPclad+I+4mJ3A==",
+      "dev": true,
+      "requires": {
+        "argparse": "^1.0.7",
+        "esprima": "^4.0.0"
+      }
+    },
+    "json-parse-better-errors": {
+      "version": "1.0.2",
+      "resolved": "https://registry.npmjs.org/json-parse-better-errors/-/json-parse-better-errors-1.0.2.tgz",
+      "integrity": "sha512-mrqyZKfX5EhL7hvqcV6WG1yYjnjeuYDzDhhcAAUrq8Po85NBQBJP+ZDUT75qZQ98IkUoBqdkExkukOU7Ts2wrw==",
+      "dev": true
+    },
+    "json-stable-stringify-without-jsonify": {
+      "version": "1.0.1",
+      "resolved": "https://registry.npmjs.org/json-stable-stringify-without-jsonify/-/json-stable-stringify-without-jsonify-1.0.1.tgz",
+      "integrity": "sha1-nbe1lJatPzz+8wp1FC0tkwrXJlE=",
+      "dev": true
+    },
+    "jsx-ast-utils": {
+      "version": "2.0.1",
+      "resolved": "https://registry.npmjs.org/jsx-ast-utils/-/jsx-ast-utils-2.0.1.tgz",
+      "integrity": "sha1-6AGxs5mF4g//yHtA43SAgOLcrH8=",
+      "dev": true,
+      "requires": {
+        "array-includes": "^3.0.3"
+      }
+    },
+    "levn": {
+      "version": "0.3.0",
+      "resolved": "https://registry.npmjs.org/levn/-/levn-0.3.0.tgz",
+      "integrity": "sha1-OwmSTt+fCDwEkP3UwLxEIeBHZO4=",
+      "dev": true,
+      "requires": {
+        "prelude-ls": "~1.1.2",
+        "type-check": "~0.3.2"
+      }
+    },
+    "locate-path": {
+      "version": "2.0.0",
+      "resolved": "https://registry.npmjs.org/locate-path/-/locate-path-2.0.0.tgz",
+      "integrity": "sha1-K1aLJl7slExtnA3pw9u7ygNUzY4=",
+      "dev": true,
+      "requires": {
+        "p-locate": "^2.0.0",
+        "path-exists": "^3.0.0"
+      },
+      "dependencies": {
+        "path-exists": {
+          "version": "3.0.0",
+          "resolved": "https://registry.npmjs.org/path-exists/-/path-exists-3.0.0.tgz",
+          "integrity": "sha1-zg6+ql94yxiSXqfYENe1mwEP1RU=",
+          "dev": true
+        }
+      }
+    },
+    "lodash": {
+      "version": "4.17.11",
+      "resolved": "https://registry.npmjs.org/lodash/-/lodash-4.17.11.tgz",
+      "integrity": "sha512-cQKh8igo5QUhZ7lg38DYWAxMvjSAKG0A8wGSVimP07SIUEK2UO+arSRKbRZWtelMtN5V0Hkwh5ryOto/SshYIg==",
+      "dev": true
+    },
+    "loose-envify": {
+      "version": "1.4.0",
+      "resolved": "https://registry.npmjs.org/loose-envify/-/loose-envify-1.4.0.tgz",
+      "integrity": "sha512-lyuxPGr/Wfhrlem2CL/UcnUc1zcqKAImBDzukY7Y5F/yQiNdko6+fRLevlw1HgMySw7f611UIY408EtxRSoK3Q==",
+      "dev": true,
+      "requires": {
+        "js-tokens": "^3.0.0 || ^4.0.0"
+      }
+    },
+    "mimic-fn": {
+      "version": "1.2.0",
+      "resolved": "https://registry.npmjs.org/mimic-fn/-/mimic-fn-1.2.0.tgz",
+      "integrity": "sha512-jf84uxzwiuiIVKiOLpfYk7N46TSy8ubTonmneY9vrpHNAnp0QBt2BxWV9dO3/j+BoVAb+a5G6YDPW3M5HOdMWQ==",
+      "dev": true
+    },
+    "minimatch": {
+      "version": "3.0.4",
+      "resolved": "https://registry.npmjs.org/minimatch/-/minimatch-3.0.4.tgz",
+      "integrity": "sha512-yJHVQEhyqPLUTgt9B83PXu6W3rx4MvvHvSUvToogpwoGDOUQ+yDrR0HRot+yOCdCO7u4hX3pWft6kWBBcqh0UA==",
+      "dev": true,
+      "requires": {
+        "brace-expansion": "^1.1.7"
+      }
+    },
+    "minimist": {
+      "version": "1.2.0",
+      "resolved": "http://registry.npmjs.org/minimist/-/minimist-1.2.0.tgz",
+      "integrity": "sha1-o1AIsg9BOD7sH7kU9M1d95omQoQ=",
+      "dev": true
+    },
+    "mkdirp": {
+      "version": "0.5.1",
+      "resolved": "http://registry.npmjs.org/mkdirp/-/mkdirp-0.5.1.tgz",
+      "integrity": "sha1-MAV0OOrGz3+MR2fzhkjWaX11yQM=",
+      "dev": true,
+      "requires": {
+        "minimist": "0.0.8"
+      },
+      "dependencies": {
+        "minimist": {
+          "version": "0.0.8",
+          "resolved": "http://registry.npmjs.org/minimist/-/minimist-0.0.8.tgz",
+          "integrity": "sha1-hX/Kv8M5fSYluCKCYuhqp6ARsF0=",
+          "dev": true
+        }
+      }
+    },
+    "ms": {
+      "version": "2.0.0",
+      "resolved": "https://registry.npmjs.org/ms/-/ms-2.0.0.tgz",
+      "integrity": "sha1-VgiurfwAvmwpAd9fmGF4jeDVl8g=",
+      "dev": true
+    },
+    "mute-stream": {
+      "version": "0.0.7",
+      "resolved": "https://registry.npmjs.org/mute-stream/-/mute-stream-0.0.7.tgz",
+      "integrity": "sha1-MHXOk7whuPq0PhvE2n6BFe0ee6s=",
+      "dev": true
+    },
+    "natural-compare": {
+      "version": "1.4.0",
+      "resolved": "https://registry.npmjs.org/natural-compare/-/natural-compare-1.4.0.tgz",
+      "integrity": "sha1-Sr6/7tdUHywnrPspvbvRXI1bpPc=",
+      "dev": true
+    },
+    "nice-try": {
+      "version": "1.0.5",
+      "resolved": "https://registry.npmjs.org/nice-try/-/nice-try-1.0.5.tgz",
+      "integrity": "sha512-1nh45deeb5olNY7eX82BkPO7SSxR5SSYJiPTrTdFUVYwAl8CKMA5N9PjTYkHiRjisVcxcQ1HXdLhx2qxxJzLNQ==",
+      "dev": true
+    },
+    "normalize-package-data": {
+      "version": "2.4.0",
+      "resolved": "https://registry.npmjs.org/normalize-package-data/-/normalize-package-data-2.4.0.tgz",
+      "integrity": "sha512-9jjUFbTPfEy3R/ad/2oNbKtW9Hgovl5O1FvFWKkKblNXoN/Oou6+9+KKohPK13Yc3/TyunyWhJp6gvRNR/PPAw==",
+      "dev": true,
+      "requires": {
+        "hosted-git-info": "^2.1.4",
+        "is-builtin-module": "^1.0.0",
+        "semver": "2 || 3 || 4 || 5",
+        "validate-npm-package-license": "^3.0.1"
+      }
+    },
+    "object-assign": {
+      "version": "4.1.1",
+      "resolved": "https://registry.npmjs.org/object-assign/-/object-assign-4.1.1.tgz",
+      "integrity": "sha1-IQmtx5ZYh8/AXLvUQsrIv7s2CGM=",
+      "dev": true
+    },
+    "object-keys": {
+      "version": "1.0.12",
+      "resolved": "https://registry.npmjs.org/object-keys/-/object-keys-1.0.12.tgz",
+      "integrity": "sha512-FTMyFUm2wBcGHnH2eXmz7tC6IwlqQZ6mVZ+6dm6vZ4IQIHjs6FdNsQBuKGPuUUUY6NfJw2PshC08Tn6LzLDOag==",
+      "dev": true
+    },
+    "once": {
+      "version": "1.4.0",
+      "resolved": "https://registry.npmjs.org/once/-/once-1.4.0.tgz",
+      "integrity": "sha1-WDsap3WWHUsROsF9nFC6753Xa9E=",
+      "dev": true,
+      "requires": {
+        "wrappy": "1"
+      }
+    },
+    "onetime": {
+      "version": "2.0.1",
+      "resolved": "https://registry.npmjs.org/onetime/-/onetime-2.0.1.tgz",
+      "integrity": "sha1-BnQoIw/WdEOyeUsiu6UotoZ5YtQ=",
+      "dev": true,
+      "requires": {
+        "mimic-fn": "^1.0.0"
+      }
+    },
+    "optionator": {
+      "version": "0.8.2",
+      "resolved": "https://registry.npmjs.org/optionator/-/optionator-0.8.2.tgz",
+      "integrity": "sha1-NkxeQJ0/TWMB1sC0wFu6UBgK62Q=",
+      "dev": true,
+      "requires": {
+        "deep-is": "~0.1.3",
+        "fast-levenshtein": "~2.0.4",
+        "levn": "~0.3.0",
+        "prelude-ls": "~1.1.2",
+        "type-check": "~0.3.2",
+        "wordwrap": "~1.0.0"
+      }
+    },
+    "os-tmpdir": {
+      "version": "1.0.2",
+      "resolved": "https://registry.npmjs.org/os-tmpdir/-/os-tmpdir-1.0.2.tgz",
+      "integrity": "sha1-u+Z0BseaqFxc/sdm/lc0VV36EnQ=",
+      "dev": true
+    },
+    "p-limit": {
+      "version": "1.3.0",
+      "resolved": "https://registry.npmjs.org/p-limit/-/p-limit-1.3.0.tgz",
+      "integrity": "sha512-vvcXsLAJ9Dr5rQOPk7toZQZJApBl2K4J6dANSsEuh6QI41JYcsS/qhTGa9ErIUUgK3WNQoJYvylxvjqmiqEA9Q==",
+      "dev": true,
+      "requires": {
+        "p-try": "^1.0.0"
+      }
+    },
+    "p-locate": {
+      "version": "2.0.0",
+      "resolved": "https://registry.npmjs.org/p-locate/-/p-locate-2.0.0.tgz",
+      "integrity": "sha1-IKAQOyIqcMj9OcwuWAaA893l7EM=",
+      "dev": true,
+      "requires": {
+        "p-limit": "^1.1.0"
+      }
+    },
+    "p-try": {
+      "version": "1.0.0",
+      "resolved": "https://registry.npmjs.org/p-try/-/p-try-1.0.0.tgz",
+      "integrity": "sha1-y8ec26+P1CKOE/Yh8rGiN8GyB7M=",
+      "dev": true
+    },
+    "parse-json": {
+      "version": "2.2.0",
+      "resolved": "https://registry.npmjs.org/parse-json/-/parse-json-2.2.0.tgz",
+      "integrity": "sha1-9ID0BDTvgHQfhGkJn43qGPVaTck=",
+      "dev": true,
+      "requires": {
+        "error-ex": "^1.2.0"
+      }
+    },
+    "path-exists": {
+      "version": "2.1.0",
+      "resolved": "https://registry.npmjs.org/path-exists/-/path-exists-2.1.0.tgz",
+      "integrity": "sha1-D+tsZPD8UY2adU3V77YscCJ2H0s=",
+      "dev": true,
+      "requires": {
+        "pinkie-promise": "^2.0.0"
+      }
+    },
+    "path-is-absolute": {
+      "version": "1.0.1",
+      "resolved": "https://registry.npmjs.org/path-is-absolute/-/path-is-absolute-1.0.1.tgz",
+      "integrity": "sha1-F0uSaHNVNP+8es5r9TpanhtcX18=",
+      "dev": true
+    },
+    "path-is-inside": {
+      "version": "1.0.2",
+      "resolved": "https://registry.npmjs.org/path-is-inside/-/path-is-inside-1.0.2.tgz",
+      "integrity": "sha1-NlQX3t5EQw0cEa9hAn+s8HS9/FM=",
+      "dev": true
+    },
+    "path-key": {
+      "version": "2.0.1",
+      "resolved": "https://registry.npmjs.org/path-key/-/path-key-2.0.1.tgz",
+      "integrity": "sha1-QRyttXTFoUDTpLGRDUDYDMn0C0A=",
+      "dev": true
+    },
+    "path-parse": {
+      "version": "1.0.6",
+      "resolved": "https://registry.npmjs.org/path-parse/-/path-parse-1.0.6.tgz",
+      "integrity": "sha512-GSmOT2EbHrINBf9SR7CDELwlJ8AENk3Qn7OikK4nFYAu3Ote2+JYNVvkpAEQm3/TLNEJFD/xZJjzyxg3KBWOzw==",
+      "dev": true
+    },
+    "pify": {
+      "version": "2.3.0",
+      "resolved": "http://registry.npmjs.org/pify/-/pify-2.3.0.tgz",
+      "integrity": "sha1-7RQaasBDqEnqWISY59yosVMw6Qw=",
+      "dev": true
+    },
+    "pinkie": {
+      "version": "2.0.4",
+      "resolved": "https://registry.npmjs.org/pinkie/-/pinkie-2.0.4.tgz",
+      "integrity": "sha1-clVrgM+g1IqXToDnckjoDtT3+HA=",
+      "dev": true
+    },
+    "pinkie-promise": {
+      "version": "2.0.1",
+      "resolved": "https://registry.npmjs.org/pinkie-promise/-/pinkie-promise-2.0.1.tgz",
+      "integrity": "sha1-ITXW36ejWMBprJsXh3YogihFD/o=",
+      "dev": true,
+      "requires": {
+        "pinkie": "^2.0.0"
+      }
+    },
+    "pkg-conf": {
+      "version": "2.1.0",
+      "resolved": "https://registry.npmjs.org/pkg-conf/-/pkg-conf-2.1.0.tgz",
+      "integrity": "sha1-ISZRTKbyq/69FoWW3xi6V4Z/AFg=",
+      "dev": true,
+      "requires": {
+        "find-up": "^2.0.0",
+        "load-json-file": "^4.0.0"
+      },
+      "dependencies": {
+        "find-up": {
+          "version": "2.1.0",
+          "resolved": "https://registry.npmjs.org/find-up/-/find-up-2.1.0.tgz",
+          "integrity": "sha1-RdG35QbHF93UgndaK3eSCjwMV6c=",
+          "dev": true,
+          "requires": {
+            "locate-path": "^2.0.0"
+          }
+        },
+        "load-json-file": {
+          "version": "4.0.0",
+          "resolved": "https://registry.npmjs.org/load-json-file/-/load-json-file-4.0.0.tgz",
+          "integrity": "sha1-L19Fq5HjMhYjT9U62rZo607AmTs=",
+          "dev": true,
+          "requires": {
+            "graceful-fs": "^4.1.2",
+            "parse-json": "^4.0.0",
+            "pify": "^3.0.0",
+            "strip-bom": "^3.0.0"
+          }
+        },
+        "parse-json": {
+          "version": "4.0.0",
+          "resolved": "https://registry.npmjs.org/parse-json/-/parse-json-4.0.0.tgz",
+          "integrity": "sha1-vjX1Qlvh9/bHRxhPmKeIy5lHfuA=",
+          "dev": true,
+          "requires": {
+            "error-ex": "^1.3.1",
+            "json-parse-better-errors": "^1.0.1"
+          }
+        },
+        "pify": {
+          "version": "3.0.0",
+          "resolved": "https://registry.npmjs.org/pify/-/pify-3.0.0.tgz",
+          "integrity": "sha1-5aSs0sEB/fPZpNB/DbxNtJ3SgXY=",
+          "dev": true
+        },
+        "strip-bom": {
+          "version": "3.0.0",
+          "resolved": "https://registry.npmjs.org/strip-bom/-/strip-bom-3.0.0.tgz",
+          "integrity": "sha1-IzTBjpx1n3vdVv3vfprj1YjmjtM=",
+          "dev": true
+        }
+      }
+    },
+    "pkg-config": {
+      "version": "1.1.1",
+      "resolved": "https://registry.npmjs.org/pkg-config/-/pkg-config-1.1.1.tgz",
+      "integrity": "sha1-VX7yLXPaPIg3EHdmxS6tq94pj+Q=",
+      "dev": true,
+      "requires": {
+        "debug-log": "^1.0.0",
+        "find-root": "^1.0.0",
+        "xtend": "^4.0.1"
+      }
+    },
+    "pkg-dir": {
+      "version": "1.0.0",
+      "resolved": "https://registry.npmjs.org/pkg-dir/-/pkg-dir-1.0.0.tgz",
+      "integrity": "sha1-ektQio1bstYp1EcFb/TpyTFM89Q=",
+      "dev": true,
+      "requires": {
+        "find-up": "^1.0.0"
+      }
+    },
+    "pluralize": {
+      "version": "7.0.0",
+      "resolved": "https://registry.npmjs.org/pluralize/-/pluralize-7.0.0.tgz",
+      "integrity": "sha512-ARhBOdzS3e41FbkW/XWrTEtukqqLoK5+Z/4UeDaLuSW+39JPeFgs4gCGqsrJHVZX0fUrx//4OF0K1CUGwlIFow==",
+      "dev": true
+    },
+    "prelude-ls": {
+      "version": "1.1.2",
+      "resolved": "https://registry.npmjs.org/prelude-ls/-/prelude-ls-1.1.2.tgz",
+      "integrity": "sha1-IZMqVJ9eUv/ZqCf1cOBL5iqX2lQ=",
+      "dev": true
+    },
+    "progress": {
+      "version": "2.0.1",
+      "resolved": "https://registry.npmjs.org/progress/-/progress-2.0.1.tgz",
+      "integrity": "sha512-OE+a6vzqazc+K6LxJrX5UPyKFvGnL5CYmq2jFGNIBWHpc4QyE49/YOumcrpQFJpfejmvRtbJzgO1zPmMCqlbBg==",
+      "dev": true
+    },
+    "prop-types": {
+      "version": "15.6.2",
+      "resolved": "https://registry.npmjs.org/prop-types/-/prop-types-15.6.2.tgz",
+      "integrity": "sha512-3pboPvLiWD7dkI3qf3KbUe6hKFKa52w+AE0VCqECtf+QHAKgOL37tTaNCnuX1nAAQ4ZhyP+kYVKf8rLmJ/feDQ==",
+      "dev": true,
+      "requires": {
+        "loose-envify": "^1.3.1",
+        "object-assign": "^4.1.1"
+      }
+    },
+    "regexpp": {
+      "version": "2.0.1",
+      "resolved": "https://registry.npmjs.org/regexpp/-/regexpp-2.0.1.tgz",
+      "integrity": "sha512-lv0M6+TkDVniA3aD1Eg0DVpfU/booSu7Eev3TDO/mZKHBfVjgCGTV4t4buppESEYDtkArYFOxTJWv6S5C+iaNw==",
+      "dev": true
+    },
+    "require-uncached": {
+      "version": "1.0.3",
+      "resolved": "https://registry.npmjs.org/require-uncached/-/require-uncached-1.0.3.tgz",
+      "integrity": "sha1-Tg1W1slmL9MeQwEcS5WqSZVUIdM=",
+      "dev": true,
+      "requires": {
+        "caller-path": "^0.1.0",
+        "resolve-from": "^1.0.0"
+      }
+    },
+    "resolve": {
+      "version": "1.8.1",
+      "resolved": "https://registry.npmjs.org/resolve/-/resolve-1.8.1.tgz",
+      "integrity": "sha512-AicPrAC7Qu1JxPCZ9ZgCZlY35QgFnNqc+0LtbRNxnVw4TXvjQ72wnuL9JQcEBgXkI9JM8MsT9kaQoHcpCRJOYA==",
+      "dev": true,
+      "requires": {
+        "path-parse": "^1.0.5"
+      }
+    },
+    "resolve-from": {
+      "version": "1.0.1",
+      "resolved": "https://registry.npmjs.org/resolve-from/-/resolve-from-1.0.1.tgz",
+      "integrity": "sha1-Jsv+k10a7uq7Kbw/5a6wHpPUQiY=",
+      "dev": true
+    },
+    "restore-cursor": {
+      "version": "2.0.0",
+      "resolved": "https://registry.npmjs.org/restore-cursor/-/restore-cursor-2.0.0.tgz",
+      "integrity": "sha1-n37ih/gv0ybU/RYpI9YhKe7g368=",
+      "dev": true,
+      "requires": {
+        "onetime": "^2.0.0",
+        "signal-exit": "^3.0.2"
+      }
+    },
+    "rimraf": {
+      "version": "2.6.2",
+      "resolved": "https://registry.npmjs.org/rimraf/-/rimraf-2.6.2.tgz",
+      "integrity": "sha512-lreewLK/BlghmxtfH36YYVg1i8IAce4TI7oao75I1g245+6BctqTVQiBP3YUJ9C6DQOXJmkYR9X9fCLtCOJc5w==",
+      "dev": true,
+      "requires": {
+        "glob": "^7.0.5"
+      }
+    },
+    "run-async": {
+      "version": "2.3.0",
+      "resolved": "https://registry.npmjs.org/run-async/-/run-async-2.3.0.tgz",
+      "integrity": "sha1-A3GrSuC91yDUFm19/aZP96RFpsA=",
+      "dev": true,
+      "requires": {
+        "is-promise": "^2.1.0"
+      }
+    },
+    "run-parallel": {
+      "version": "1.1.9",
+      "resolved": "https://registry.npmjs.org/run-parallel/-/run-parallel-1.1.9.tgz",
+      "integrity": "sha512-DEqnSRTDw/Tc3FXf49zedI638Z9onwUotBMiUFKmrO2sdFKIbXamXGQ3Axd4qgphxKB4kw/qP1w5kTxnfU1B9Q==",
+      "dev": true
+    },
+    "safe-buffer": {
+      "version": "5.1.2",
+      "resolved": "https://registry.npmjs.org/safe-buffer/-/safe-buffer-5.1.2.tgz",
+      "integrity": "sha512-Gd2UZBJDkXlY7GbJxfsE8/nvKkUEU1G38c1siN6QP6a9PT9MmHB8GnpscSmMJSoF8LOIrt8ud/wPtojys4G6+g==",
+      "dev": true
+    },
+    "safer-buffer": {
+      "version": "2.1.2",
+      "resolved": "https://registry.npmjs.org/safer-buffer/-/safer-buffer-2.1.2.tgz",
+      "integrity": "sha512-YZo3K82SD7Riyi0E1EQPojLz7kpepnSQI9IyPbHHg1XXXevb5dJI7tpyN2ADxGcQbHG7vcyRHk0cbwqcQriUtg==",
+      "dev": true
+    },
+    "semver": {
+      "version": "5.6.0",
+      "resolved": "https://registry.npmjs.org/semver/-/semver-5.6.0.tgz",
+      "integrity": "sha512-RS9R6R35NYgQn++fkDWaOmqGoj4Ek9gGs+DPxNUZKuwE183xjJroKvyo1IzVFeXvUrvmALy6FWD5xrdJT25gMg==",
+      "dev": true
+    },
+    "shebang-command": {
+      "version": "1.2.0",
+      "resolved": "https://registry.npmjs.org/shebang-command/-/shebang-command-1.2.0.tgz",
+      "integrity": "sha1-RKrGW2lbAzmJaMOfNj/uXer98eo=",
+      "dev": true,
+      "requires": {
+        "shebang-regex": "^1.0.0"
+      }
+    },
+    "shebang-regex": {
+      "version": "1.0.0",
+      "resolved": "https://registry.npmjs.org/shebang-regex/-/shebang-regex-1.0.0.tgz",
+      "integrity": "sha1-2kL0l0DAtC2yypcoVxyxkMmO/qM=",
+      "dev": true
+    },
+    "signal-exit": {
+      "version": "3.0.2",
+      "resolved": "https://registry.npmjs.org/signal-exit/-/signal-exit-3.0.2.tgz",
+      "integrity": "sha1-tf3AjxKH6hF4Yo5BXiUTK3NkbG0=",
+      "dev": true
+    },
+    "slice-ansi": {
+      "version": "1.0.0",
+      "resolved": "https://registry.npmjs.org/slice-ansi/-/slice-ansi-1.0.0.tgz",
+      "integrity": "sha512-POqxBK6Lb3q6s047D/XsDVNPnF9Dl8JSaqe9h9lURl0OdNqy/ujDrOiIHtsqXMGbWWTIomRzAMaTyawAU//Reg==",
+      "dev": true,
+      "requires": {
+        "is-fullwidth-code-point": "^2.0.0"
+      },
+      "dependencies": {
+        "is-fullwidth-code-point": {
+          "version": "2.0.0",
+          "resolved": "https://registry.npmjs.org/is-fullwidth-code-point/-/is-fullwidth-code-point-2.0.0.tgz",
+          "integrity": "sha1-o7MKXE8ZkYMWeqq5O+764937ZU8=",
+          "dev": true
+        }
+      }
+    },
+    "spdx-correct": {
+      "version": "3.0.2",
+      "resolved": "https://registry.npmjs.org/spdx-correct/-/spdx-correct-3.0.2.tgz",
+      "integrity": "sha512-q9hedtzyXHr5S0A1vEPoK/7l8NpfkFYTq6iCY+Pno2ZbdZR6WexZFtqeVGkGxW3TEJMN914Z55EnAGMmenlIQQ==",
+      "dev": true,
+      "requires": {
+        "spdx-expression-parse": "^3.0.0",
+        "spdx-license-ids": "^3.0.0"
+      }
+    },
+    "spdx-exceptions": {
+      "version": "2.2.0",
+      "resolved": "https://registry.npmjs.org/spdx-exceptions/-/spdx-exceptions-2.2.0.tgz",
+      "integrity": "sha512-2XQACfElKi9SlVb1CYadKDXvoajPgBVPn/gOQLrTvHdElaVhr7ZEbqJaRnJLVNeaI4cMEAgVCeBMKF6MWRDCRA==",
+      "dev": true
+    },
+    "spdx-expression-parse": {
+      "version": "3.0.0",
+      "resolved": "https://registry.npmjs.org/spdx-expression-parse/-/spdx-expression-parse-3.0.0.tgz",
+      "integrity": "sha512-Yg6D3XpRD4kkOmTpdgbUiEJFKghJH03fiC1OPll5h/0sO6neh2jqRDVHOQ4o/LMea0tgCkbMgea5ip/e+MkWyg==",
+      "dev": true,
+      "requires": {
+        "spdx-exceptions": "^2.1.0",
+        "spdx-license-ids": "^3.0.0"
+      }
+    },
+    "spdx-license-ids": {
+      "version": "3.0.1",
+      "resolved": "https://registry.npmjs.org/spdx-license-ids/-/spdx-license-ids-3.0.1.tgz",
+      "integrity": "sha512-TfOfPcYGBB5sDuPn3deByxPhmfegAhpDYKSOXZQN81Oyrrif8ZCodOLzK3AesELnCx03kikhyDwh0pfvvQvF8w==",
+      "dev": true
+    },
+    "sprintf-js": {
+      "version": "1.0.3",
+      "resolved": "https://registry.npmjs.org/sprintf-js/-/sprintf-js-1.0.3.tgz",
+      "integrity": "sha1-BOaSb2YolTVPPdAVIDYzuFcpfiw=",
+      "dev": true
+    },
+    "standard": {
+      "version": "12.0.1",
+      "resolved": "https://registry.npmjs.org/standard/-/standard-12.0.1.tgz",
+      "integrity": "sha512-UqdHjh87OG2gUrNCSM4QRLF5n9h3TFPwrCNyVlkqu31Hej0L/rc8hzKqVvkb2W3x0WMq7PzZdkLfEcBhVOR6lg==",
+      "dev": true,
+      "requires": {
+        "eslint": "~5.4.0",
+        "eslint-config-standard": "12.0.0",
+        "eslint-config-standard-jsx": "6.0.2",
+        "eslint-plugin-import": "~2.14.0",
+        "eslint-plugin-node": "~7.0.1",
+        "eslint-plugin-promise": "~4.0.0",
+        "eslint-plugin-react": "~7.11.1",
+        "eslint-plugin-standard": "~4.0.0",
+        "standard-engine": "~9.0.0"
+      }
+    },
+    "standard-engine": {
+      "version": "9.0.0",
+      "resolved": "https://registry.npmjs.org/standard-engine/-/standard-engine-9.0.0.tgz",
+      "integrity": "sha512-ZfNfCWZ2Xq67VNvKMPiVMKHnMdvxYzvZkf1AH8/cw2NLDBm5LRsxMqvEJpsjLI/dUosZ3Z1d6JlHDp5rAvvk2w==",
+      "dev": true,
+      "requires": {
+        "deglob": "^2.1.0",
+        "get-stdin": "^6.0.0",
+        "minimist": "^1.1.0",
+        "pkg-conf": "^2.0.0"
+      },
+      "dependencies": {
+        "get-stdin": {
+          "version": "6.0.0",
+          "resolved": "https://registry.npmjs.org/get-stdin/-/get-stdin-6.0.0.tgz",
+          "integrity": "sha512-jp4tHawyV7+fkkSKyvjuLZswblUtz+SQKzSWnBbii16BuZksJlU1wuBYXY75r+duh/llF1ur6oNwi+2ZzjKZ7g==",
+          "dev": true
+        }
+      }
+    },
+    "string_decoder": {
+      "version": "1.1.1",
+      "resolved": "https://registry.npmjs.org/string_decoder/-/string_decoder-1.1.1.tgz",
+      "integrity": "sha512-n/ShnvDi6FHbbVfviro+WojiFzv+s8MPMHBczVePfUpDJLwoLT0ht1l4YwBCbi8pJAveEEdnkHyPyTP/mzRfwg==",
+      "dev": true,
+      "requires": {
+        "safe-buffer": "~5.1.0"
+      }
+    },
+    "strip-ansi": {
+      "version": "3.0.1",
+      "resolved": "http://registry.npmjs.org/strip-ansi/-/strip-ansi-3.0.1.tgz",
+      "integrity": "sha1-ajhfuIU9lS1f8F0Oiq+UJ43GPc8=",
+      "dev": true,
+      "requires": {
+        "ansi-regex": "^2.0.0"
+      }
+    },
+    "strip-json-comments": {
+      "version": "2.0.1",
+      "resolved": "https://registry.npmjs.org/strip-json-comments/-/strip-json-comments-2.0.1.tgz",
+      "integrity": "sha1-PFMZQukIwml8DsNEhYwobHygpgo=",
+      "dev": true
+    },
+    "supports-color": {
+      "version": "5.5.0",
+      "resolved": "https://registry.npmjs.org/supports-color/-/supports-color-5.5.0.tgz",
+      "integrity": "sha512-QjVjwdXIt408MIiAqCX4oUKsgU2EqAGzs2Ppkm4aQYbjm+ZEWEcW4SfFNTr4uMNZma0ey4f5lgLrkB0aX0QMow==",
+      "dev": true,
+      "requires": {
+        "has-flag": "^3.0.0"
+      }
+    },
+    "symbol-observable": {
+      "version": "1.0.1",
+      "resolved": "https://registry.npmjs.org/symbol-observable/-/symbol-observable-1.0.1.tgz",
+      "integrity": "sha1-g0D8RwLDEi310iKI+IKD9RPT/dQ=",
+      "dev": true
+    },
+    "table": {
+      "version": "4.0.3",
+      "resolved": "http://registry.npmjs.org/table/-/table-4.0.3.tgz",
+      "integrity": "sha512-S7rnFITmBH1EnyKcvxBh1LjYeQMmnZtCXSEbHcH6S0NoKit24ZuFO/T1vDcLdYsLQkM188PVVhQmzKIuThNkKg==",
+      "dev": true,
+      "requires": {
+        "ajv": "^6.0.1",
+        "ajv-keywords": "^3.0.0",
+        "chalk": "^2.1.0",
+        "lodash": "^4.17.4",
+        "slice-ansi": "1.0.0",
+        "string-width": "^2.1.1"
+      },
+      "dependencies": {
+        "ajv": {
+          "version": "6.5.4",
+          "resolved": "https://registry.npmjs.org/ajv/-/ajv-6.5.4.tgz",
+          "integrity": "sha512-4Wyjt8+t6YszqaXnLDfMmG/8AlO5Zbcsy3ATHncCzjW/NoPzAId8AK6749Ybjmdt+kUY1gP60fCu46oDxPv/mg==",
+          "dev": true,
+          "requires": {
+            "fast-deep-equal": "^2.0.1",
+            "fast-json-stable-stringify": "^2.0.0",
+            "json-schema-traverse": "^0.4.1",
+            "uri-js": "^4.2.2"
+          }
+        },
+        "ansi-regex": {
+          "version": "3.0.0",
+          "resolved": "https://registry.npmjs.org/ansi-regex/-/ansi-regex-3.0.0.tgz",
+          "integrity": "sha1-7QMXwyIGT3lGbAKWa922Bas32Zg=",
+          "dev": true
+        },
+        "fast-deep-equal": {
+          "version": "2.0.1",
+          "resolved": "https://registry.npmjs.org/fast-deep-equal/-/fast-deep-equal-2.0.1.tgz",
+          "integrity": "sha1-ewUhjd+WZ79/Nwv3/bLLFf3Qqkk=",
+          "dev": true
+        },
+        "is-fullwidth-code-point": {
+          "version": "2.0.0",
+          "resolved": "https://registry.npmjs.org/is-fullwidth-code-point/-/is-fullwidth-code-point-2.0.0.tgz",
+          "integrity": "sha1-o7MKXE8ZkYMWeqq5O+764937ZU8=",
+          "dev": true
+        },
+        "json-schema-traverse": {
+          "version": "0.4.1",
+          "resolved": "https://registry.npmjs.org/json-schema-traverse/-/json-schema-traverse-0.4.1.tgz",
+          "integrity": "sha512-xbbCH5dCYU5T8LcEhhuh7HJ88HXuW3qsI3Y0zOZFKfZEHcpWiHU/Jxzk629Brsab/mMiHQti9wMP+845RPe3Vg==",
+          "dev": true
+        },
+        "string-width": {
+          "version": "2.1.1",
+          "resolved": "https://registry.npmjs.org/string-width/-/string-width-2.1.1.tgz",
+          "integrity": "sha512-nOqH59deCq9SRHlxq1Aw85Jnt4w6KvLKqWVik6oA9ZklXLNIOlqg4F2yrT1MVaTjAqvVwdfeZ7w7aCvJD7ugkw==",
+          "dev": true,
+          "requires": {
+            "is-fullwidth-code-point": "^2.0.0",
+            "strip-ansi": "^4.0.0"
+          }
+        },
+        "strip-ansi": {
+          "version": "4.0.0",
+          "resolved": "https://registry.npmjs.org/strip-ansi/-/strip-ansi-4.0.0.tgz",
+          "integrity": "sha1-qEeQIusaw2iocTibY1JixQXuNo8=",
+          "dev": true,
+          "requires": {
+            "ansi-regex": "^3.0.0"
+          }
+        }
+      }
+    },
+    "text-table": {
+      "version": "0.2.0",
+      "resolved": "https://registry.npmjs.org/text-table/-/text-table-0.2.0.tgz",
+      "integrity": "sha1-f17oI66AUgfACvLfSoTsP8+lcLQ=",
+      "dev": true
+    },
+    "through": {
+      "version": "2.3.8",
+      "resolved": "http://registry.npmjs.org/through/-/through-2.3.8.tgz",
+      "integrity": "sha1-DdTJ/6q8NXlgsbckEV1+Doai4fU=",
+      "dev": true
+    },
+    "tmp": {
+      "version": "0.0.33",
+      "resolved": "https://registry.npmjs.org/tmp/-/tmp-0.0.33.tgz",
+      "integrity": "sha512-jRCJlojKnZ3addtTOjdIqoRuPEKBvNXcGYqzO6zWZX8KfKEpnGY5jfggJQ3EjKuu8D4bJRr0y+cYJFmYbImXGw==",
+      "dev": true,
+      "requires": {
+        "os-tmpdir": "~1.0.2"
+      }
+    },
+    "type-check": {
+      "version": "0.3.2",
+      "resolved": "https://registry.npmjs.org/type-check/-/type-check-0.3.2.tgz",
+      "integrity": "sha1-WITKtRLPHTVeP7eE8wgEsrUg23I=",
+      "dev": true,
+      "requires": {
+        "prelude-ls": "~1.1.2"
+      }
+    },
+    "uniq": {
+      "version": "1.0.1",
+      "resolved": "https://registry.npmjs.org/uniq/-/uniq-1.0.1.tgz",
+      "integrity": "sha1-sxxa6CVIRKOoKBVBzisEuGWnNP8=",
+      "dev": true
+    },
+    "uri-js": {
+      "version": "4.2.2",
+      "resolved": "https://registry.npmjs.org/uri-js/-/uri-js-4.2.2.tgz",
+      "integrity": "sha512-KY9Frmirql91X2Qgjry0Wd4Y+YTdrdZheS8TFwvkbLWf/G5KNJDCh6pKL5OZctEW4+0Baa5idK2ZQuELRwPznQ==",
+      "dev": true,
+      "requires": {
+        "punycode": "^2.1.0"
+      },
+      "dependencies": {
+        "punycode": {
+          "version": "2.1.1",
+          "resolved": "https://registry.npmjs.org/punycode/-/punycode-2.1.1.tgz",
+          "integrity": "sha512-XRsRjdf+j5ml+y/6GKHPZbrF/8p2Yga0JPtdqTIY2Xe5ohJPD9saDJJLPvp9+NSBprVvevdXZybnj2cv8OEd0A==",
+          "dev": true
+        }
+      }
+    },
+    "util-deprecate": {
+      "version": "1.0.2",
+      "resolved": "https://registry.npmjs.org/util-deprecate/-/util-deprecate-1.0.2.tgz",
+      "integrity": "sha1-RQ1Nyfpw3nMnYvvS1KKJgUGaDM8=",
+      "dev": true
+    },
+    "validate-npm-package-license": {
+      "version": "3.0.4",
+      "resolved": "https://registry.npmjs.org/validate-npm-package-license/-/validate-npm-package-license-3.0.4.tgz",
+      "integrity": "sha512-DpKm2Ui/xN7/HQKCtpZxoRWBhZ9Z0kqtygG8XCgNQ8ZlDnxuQmWhj566j8fN4Cu3/JmbhsDo7fcAJq4s9h27Ew==",
+      "dev": true,
+      "requires": {
+        "spdx-correct": "^3.0.0",
+        "spdx-expression-parse": "^3.0.0"
+      }
+    },
+    "which": {
+      "version": "1.3.1",
+      "resolved": "https://registry.npmjs.org/which/-/which-1.3.1.tgz",
+      "integrity": "sha512-HxJdYWq1MTIQbJ3nw0cqssHoTNU267KlrDuGZ1WYlxDStUtKUhOaJmh112/TZmHxxUfuJqPXSOm7tDyas0OSIQ==",
+      "dev": true,
+      "requires": {
+        "isexe": "^2.0.0"
+      }
+    },
+    "wordwrap": {
+      "version": "1.0.0",
+      "resolved": "https://registry.npmjs.org/wordwrap/-/wordwrap-1.0.0.tgz",
+      "integrity": "sha1-J1hIEIkUVqQXHI0CJkQa3pDLyus=",
+      "dev": true
+    },
+    "wrappy": {
+      "version": "1.0.2",
+      "resolved": "https://registry.npmjs.org/wrappy/-/wrappy-1.0.2.tgz",
+      "integrity": "sha1-tSQ9jz7BqjXxNkYFvA0QNuMKtp8=",
+      "dev": true
+    },
+    "write": {
+      "version": "0.2.1",
+      "resolved": "https://registry.npmjs.org/write/-/write-0.2.1.tgz",
+      "integrity": "sha1-X8A4KOJkzqP+kUVUdvejxWbLB1c=",
+      "dev": true,
+      "requires": {
+        "mkdirp": "^0.5.1"
+      }
+    },
+    "xtend": {
+      "version": "4.0.1",
+      "resolved": "https://registry.npmjs.org/xtend/-/xtend-4.0.1.tgz",
+      "integrity": "sha1-pcbVMr5lbiPbgg77lDofBJmNY68=",
+      "dev": true
+    }
+  }
+}
diff --git a/package.json b/package.json
index dfaf187..d4a7f1d 100644
--- a/package.json
+++ b/package.json
@@ -5,8 +5,21 @@
   "main": "index.js",
   "scripts": {
     "build": "node index.js",
+    "standard-noi": "./node_modules/.bin/standard --env browser --plugin html 'src/**/*.html'",
+    "fix-standard-noi": "./node_modules/.bin/standard --env browser --fix --plugin html 'src/**/*.html'",
+    "standard": "./node_modules/.bin/standard",
+    "fix-standard": "./node_modules/.bin/standard --fix",
     "test": "echo \"Error: no test specified\" && exit 1"
   },
   "author": "",
-  "license": "ISC"
+  "license": "ISC",
+  "devDependencies": {
+    "eslint-plugin-html": "^4.0.6",
+    "standard": "^12.0.1"
+  },
+  "standard": {
+          "globals": [
+                  "hyperHTML"
+          ]
+  }
 }
diff --git a/src/about.noi b/src/about.html
similarity index 100%
rename from src/about.noi
rename to src/about.html
diff --git a/src/config.noi b/src/config.html
similarity index 100%
rename from src/config.noi
rename to src/config.html
diff --git a/src/core/core-style.noi b/src/core/core-style.html
similarity index 100%
rename from src/core/core-style.noi
rename to src/core/core-style.html
diff --git a/src/core/events.html b/src/core/events.html
new file mode 100644
index 0000000..c11a94f
--- /dev/null
+++ b/src/core/events.html
@@ -0,0 +1,26 @@
+<noi-wiki id="noi/core/events" content-type="text/x.html-source">
+  <script>
+    document.addEventListener('noi-render-ready', () => {
+      new MutationObserver((mutations) => {
+        var updates = {}
+        for (var mutation of mutations) {
+          if (mutation.target.tagName.toLowerCase() === 'noi-wiki') {
+            if (mutation.type === 'childList') {
+              updates[mutation.target.id] = Object.assign(updates[mutation.target.id] || {}, {
+                wiki: mutation.target
+              })
+            }
+            if (mutation.type === 'attributes' && mutation.attributeName !== 'class' && !mutation.attributeName.startsWith('data-')) {
+              updates[mutation.target.id] = Object.assign(updates[mutation.target.id] || {}, {
+                wiki: mutation.target
+              })
+            }
+          }
+        }
+        for (var update in updates) {
+          document.dispatchEvent(new CustomEvent('noi-wiki-updated', { detail: updates[update] }))
+        }
+      }).observe(document.body, { childList: true, attributes: true, subtree: true })
+    })
+  </script>
+</noi-wiki>
\ No newline at end of file
diff --git a/src/core/events.noi b/src/core/events.noi
deleted file mode 100644
index adedaf4..0000000
--- a/src/core/events.noi
+++ /dev/null
@@ -1,26 +0,0 @@
-<noi-wiki id="noi/core/events" content-type="text/x.html-source">
-  <script>
-  document.addEventListener('noi-render-ready', () => {
-  new MutationObserver((mutations) => {
-      var updates = {};
-      for (var mutation of mutations) {
-        if (mutation.target.tagName.toLowerCase() === "noi-wiki") {
-           if (mutation.type == "childList")  {
-               updates[mutation.target.id] = Object.assign(updates[mutation.target.id] || {}, {
-                 wiki: mutation.target,
-               });
-           }
-           if (mutation.type == "attributes" && mutation.attributeName !== "class" && !mutation.attributeName.startsWith("data-")) {
-               updates[mutation.target.id] = Object.assign(updates[mutation.target.id] || {}, {
-                 wiki: mutation.target,
-               });
-           }
-        }
-      }
-      for (var update in updates) {
-          document.dispatchEvent(new CustomEvent('noi-wiki-updated', {detail: updates[update]}));
-      }
-    }).observe(document.body, {childList: true, attributes: true, subtree: true});
-  });
-  </script>
-</noi-wiki>
diff --git a/src/core/noi-link.noi b/src/core/noi-link.html
similarity index 56%
rename from src/core/noi-link.noi
rename to src/core/noi-link.html
index f91559b..252d72a 100644
--- a/src/core/noi-link.noi
+++ b/src/core/noi-link.html
@@ -1,16 +1,16 @@
 <noi-wiki id="noi/core/noi-link" title="noi-link custom element" content-type="text/x.html-source">
   <script>
     class NoiLink extends HTMLAnchorElement {
-      connectedCallback() {
+      connectedCallback () {
         this.onclick = (e) => {
-          document.noi.wiki(this.getAttribute("href").slice(1)).show();
-          return this.hasAttribute("propagate");
+          document.noi.wiki(this.getAttribute('href').slice(1)).show()
+          return this.hasAttribute('propagate')
         }
       }
     }
 
     document.addEventListener('noi-render-ready', function () {
-      customElements.define('noi-link', NoiLink, { extends: "a" });
+      customElements.define('noi-link', NoiLink, { extends: 'a' })
     })
   </script>
 </noi-wiki>
\ No newline at end of file
diff --git a/src/core/noi-transclude.html b/src/core/noi-transclude.html
new file mode 100644
index 0000000..ce613c9
--- /dev/null
+++ b/src/core/noi-transclude.html
@@ -0,0 +1,29 @@
+<noi-wiki id="noi/core/noi-transclude" title="noi-transclude custom element" content-type="text/x.html-source">
+  <script>
+    class NoiTransclude extends HTMLElement {
+      constructor () {
+        super()
+        this.html = hyperHTML.bind(this)
+      }
+      connectedCallback () {
+        const wiki = document.getElementById(this.getAttribute('wiki'))
+        if (wiki === null) {
+          return
+        }
+        const attr = this.getAttribute('attribute')
+          ? wiki.getAttribute(this.getAttribute('attribute'))
+          : null
+        const contentType = this.getAttribute('attribute')
+          ? 'text/plain'
+          : wiki.getAttribute(this.getAttribute('content-type'))
+
+        const parsed = { html: document.noi.contentType[contentType](attr || wiki.innerHTML) }
+        this.html`${parsed}`
+      }
+    }
+
+    document.addEventListener('noi-render-ready', function () {
+      customElements.define('noi-transclude', NoiTransclude)
+})
+  </script>
+</noi-wiki>
diff --git a/src/core/noi-transclude.noi b/src/core/noi-transclude.noi
deleted file mode 100644
index 26d21bb..0000000
--- a/src/core/noi-transclude.noi
+++ /dev/null
@@ -1,29 +0,0 @@
-<noi-wiki id="noi/core/noi-transclude" title="noi-transclude custom element" content-type="text/x.html-source">
-  <script>
-    class NoiTransclude extends HTMLElement {
-      constructor() {
-        super();
-        this.html = hyperHTML.bind(this);
-      }
-      connectedCallback() {
-        const wiki = document.getElementById(this.getAttribute("wiki"));
-        if (wiki === null) {
-          return;
-        }
-        const attr = this.getAttribute("attribute") ?
-          wiki.getAttribute(this.getAttribute("attribute")) :
-          null;
-        const contentType = this.getAttribute("attribute") ?
-          "text/plain" :
-          wiki.getAttribute(this.getAttribute("content-type"));
-
-        const parsed = { html: document.noi.contentType[contentType](attr || wiki.innerHTML) };
-        this.html`${parsed}`;
-      }
-    }
-
-    document.addEventListener('noi-render-ready', function () {
-      customElements.define('noi-transclude', NoiTransclude);
-    })
-  </script>
-</noi-wiki>
\ No newline at end of file
diff --git a/src/core/noi-var.html b/src/core/noi-var.html
new file mode 100644
index 0000000..d639bdd
--- /dev/null
+++ b/src/core/noi-var.html
@@ -0,0 +1,37 @@
+<noi-wiki id="noi/core/noi-var" title="noi-var custom element" content-type="text/x.html-source">
+  <script>
+    class NoiVar extends HTMLElement {
+      constructor () {
+        super()
+        this.vars = {}
+        this.html = hyperHTML.bind(this)
+      }
+      connectedCallback () {
+        if (this.hasAttribute('name') && this.hasAttribute('value')) {
+          this.vars[this.getAttribute('name')] = this.getAttribute('value') || this.innerHTML
+        } else if (this.hasAttribute('name')) {
+          this.html`${this.get(this.getAttribute('name'))}`
+        }
+      }
+
+      get (name) {
+        if (this.vars.hasOwnProperty(name)) {
+          return this.vars[name] || ''
+        } else {
+          var e = this.parentElement
+          while (e !== null) {
+            if (e instanceof NoiVar) {
+              return e.get(name)
+            }
+            e = this.parentElement
+          }
+          return ''
+        }
+      }
+    }
+
+    document.addEventListener('noi-render-ready', function () {
+      customElements.define('noi-var', NoiVar)
+})
+  </script>
+</noi-wiki>
diff --git a/src/core/noi-var.noi b/src/core/noi-var.noi
deleted file mode 100644
index fe0c516..0000000
--- a/src/core/noi-var.noi
+++ /dev/null
@@ -1,38 +0,0 @@
-<noi-wiki id="noi/core/noi-var" title="noi-var custom element" content-type="text/x.html-source">
-  <script>
-    class NoiVar extends HTMLElement {
-      constructor() {
-        super();
-        this.vars = {};
-        this.html = hyperHTML.bind(this);
-      }
-      connectedCallback() {
-        if (this.hasAttribute("name") && this.hasAttribute("value")) {
-          this.vars[this.getAttribute("name")] = this.getAttribute("value") || this.innerHTML;
-        } else if (this.hasAttribute("name")) {
-          this.html`${this.get(this.getAttribute("name"))}`
-        }
-      }
-
-      get(name) {
-        if (this.vars.hasOwnProperty(name)) {
-          return this.vars[name] || "";
-        } else {
-          var e = this.parentElement;
-          while (e !== null) {
-            if (e instanceof NoiVar) {
-              return e.get(name);
-            }
-            e = this.parentElement;
-          }
-          return "";
-        }
-      }
-
-    }
-
-    document.addEventListener('noi-render-ready', function () {
-      customElements.define('noi-var', NoiVar);
-    })
-  </script>
-</noi-wiki>
\ No newline at end of file
diff --git a/src/core/noi-wiki.html b/src/core/noi-wiki.html
new file mode 100644
index 0000000..83fea70
--- /dev/null
+++ b/src/core/noi-wiki.html
@@ -0,0 +1,156 @@
+<noi-wiki id="noi/core/noi-wiki" title="noi-wiki custom element" content-type="text/x.html-source">
+  <script>
+    class NoiWiki extends HTMLElement {
+      constructor () {
+        super()
+        document.addEventListener('noi-wiki-updated', (e) => {
+          var wiki = e.detail.wiki
+          while (wiki !== null) {
+            // pierce shadow root
+            if (wiki instanceof ShadowRoot) {
+              wiki = wiki.host
+            }
+            if (wiki === this) {
+              this.render()
+            }
+            wiki = wiki.parentNode
+          }
+        })
+        this.attachShadow({ mode: 'open' })
+      }
+      connectedCallback () {
+        this.render()
+      }
+      static get observedAttributes () {
+        return ['data-rendered']
+      }
+      attributeChangedCallback (name, old, val) {
+        if (name === 'data-rendered') {
+          this.render()
+        }
+      }
+      shouldRender () {
+        var target = this
+        while (target !== null) {
+          // pierce shadow root
+          if (target instanceof ShadowRoot) {
+            target = target.host
+          }
+          if (target instanceof NoiWiki && target.hasAttribute('data-rendered')) {
+            return true
+          }
+          target = target.parentNode
+        }
+        return false
+      }
+      render (shadow) {
+        if (this.shouldRender()) {
+          var text = document.createElement(document.noi.wiki('noi/config').getAttribute('view'))
+          for (var i in this.attributes) {
+            var attr = this.attributes.item(i)
+            text.setAttribute(attr.nodeName, attr.nodeValue)
+          }
+          text.setAttribute('style', 'display: none;')
+          text.innerHTML = this.innerHTML
+          if ((shadow || this.shadowRoot).firstChild != null) {
+            (shadow || this.shadowRoot).replaceChild(text, (shadow || this.shadowRoot).firstChild)
+          } else {
+            (shadow || this.shadowRoot).appendChild(text)
+          }
+        } else {
+          (shadow || this.shadowRoot).innerHTML = ''
+        }
+      }
+      toggle () {
+        document.dispatchEvent(new CustomEvent('noi-toggle', { detail: { element: this } }))
+      }
+      show () {
+        document.dispatchEvent(new CustomEvent('noi-show', { detail: { element: this } }))
+      }
+      hide () {
+        document.dispatchEvent(new CustomEvent('noi-hide', { detail: { element: this } }))
+      }
+    }
+    document.noi = document.noi || {}
+
+    document.noi.wiki = (id) => {
+      var el = document.getElementById(id)
+      if (el == null) {
+        el = document.createElement('noi-wiki')
+        el.setAttribute('id', id)
+        el.setAttribute('data-editing', true)
+      }
+      return el
+    }
+    document.noi.wikis = (query) => {
+      return document.querySelectorAll(`noi-wiki${query || ''}`)
+    }
+
+    document.noi.getHTMLBlob = () => {
+      const header = `
+   <!DOCTYPE html>
+<html>
+  <head>
+    <meta charset="utf-8">
+    <meta name="viewport" content="width=device-width, initial-scale=1">
+ </head>
+ <body>`
+  const footer = `
+ </body>
+</html>
+  `
+  const content = Array.prototype.map.call(document.noi.wikis(),
+        w => {
+          const w_ = document.importNode(w, true)
+          for (var attr of w_.attributes) {
+            if (attr.nodeName === 'class') {
+              w_.removeAttribute(attr.nodeName)
+            }
+          }
+          for (var data in w_.dataset) {
+            delete w_.dataset[data]
+          }
+          return w_.outerHTML
+        })
+  content.unshift(header)
+  content.push(footer)
+  return new Blob(content, { type: 'text/html' })
+}
+
+(function () {
+      var previousObjectURL = null
+      document.noi.saveHTML = () => {
+        if (previousObjectURL !== null) {
+          URL.revokeObjectURL(previousObjectURL)
+        }
+        let url = URL.createObjectURL(document.noi.getHTMLBlob())
+        var name = window.location.pathname.split('/').slice(-1)[0]
+        if (!name.endsWith('.html')) {
+          name = 'index.html'
+        }
+        let link = document.createElement('a')
+        link.setAttribute('download', name)
+        link.setAttribute('href', url)
+        document.body.appendChild(link)
+        link.click()
+        document.body.removeChild(link)
+      }
+}).call(this)
+
+document.addEventListener('noi-render-ready', function () {
+      customElements.define('noi-wiki', NoiWiki)
+      function loadWikis () {
+        if (document.location.hash === '') {
+          document.noi.wiki('default').show()
+        } else {
+          document.location.hash.split('#').slice(1).map(decodeURIComponent).forEach((name) => document.noi.wiki(name).show())
+        }
+      }
+      loadWikis()
+      window.onhashchange = () => {
+        document.noi.wikis().forEach((w) => w.hide())
+        loadWikis()
+      }
+})
+  </script>
+</noi-wiki>
diff --git a/src/core/noi-wiki.noi b/src/core/noi-wiki.noi
deleted file mode 100644
index ccc1aba..0000000
--- a/src/core/noi-wiki.noi
+++ /dev/null
@@ -1,158 +0,0 @@
-<noi-wiki id="noi/core/noi-wiki" title="noi-wiki custom element" content-type="text/x.html-source">
-  <script>
-    class NoiWiki extends HTMLElement {
-      constructor() {
-        super();
-        document.addEventListener('noi-wiki-updated', (e) => {
-          var wiki = e.detail.wiki;
-          while (wiki !== null) {
-            // pierce shadow root
-            if (wiki instanceof ShadowRoot) {
-               wiki = wiki.host;
-            }
-            if (wiki == this) {
-               this.render();
-            }
-            wiki = wiki.parentNode;
-          }
-        });
-        this.attachShadow({ mode: 'open' });
-      }
-      connectedCallback() {
-        this.render();
-      }
-      static get observedAttributes() {
-        return ['data-rendered'];
-      }
-      attributeChangedCallback(name, old, val) {
-        if (name === 'data-rendered') {
-          this.render();
-        }
-      }
-      shouldRender() {
-        var target = this;
-        while (target !== null) {
-           // pierce shadow root
-           if (target instanceof ShadowRoot) {
-              target = target.host;
-           }
-           if (target instanceof NoiWiki && target.hasAttribute('data-rendered')) {
-             return true;
-           }
-           target = target.parentNode;
-        }
-        return false;
-      }
-      render(shadow) {
-        if (this.shouldRender()) {
-          var text = document.createElement(document.noi.wiki('noi/config').getAttribute('view'));
-          for (var i in this.attributes) {
-            var attr = this.attributes.item(i);
-            text.setAttribute(attr.nodeName, attr.nodeValue);
-          }
-          text.setAttribute('style', 'display: none;');
-          text.innerHTML = this.innerHTML;
-          if ((shadow || this.shadowRoot).firstChild != null) {
-            (shadow || this.shadowRoot).replaceChild(text, (shadow || this.shadowRoot).firstChild);
-          } else {
-            (shadow || this.shadowRoot).appendChild(text);
-          }
-        } else {
-          (shadow || this.shadowRoot).innerHTML = "";
-        }
-      }
-      toggle() {
-        document.dispatchEvent(new CustomEvent('noi-toggle', { detail: { element: this } }))
-      }
-      show() {
-        document.dispatchEvent(new CustomEvent('noi-show', { detail: { element: this } }))
-      }
-      hide() {
-        document.dispatchEvent(new CustomEvent('noi-hide', { detail: { element: this } }))
-      }
-
-    }
-    document.noi = document.noi || {}
-
-    document.noi.wiki = (id) => {
-      var el = document.getElementById(id);
-      if (el == null) {
-        el = document.createElement('noi-wiki');
-        el.setAttribute("id", id);
-        el.setAttribute("data-editing", true);
-      }
-      return el;
-
-    }
-    document.noi.wikis = (query) => {
-      return document.querySelectorAll(`noi-wiki${query || ""}`);
-    }
-
-    document.noi.getHTMLBlob = () => {
-      const header = `
-   <!DOCTYPE html>
-    <html>
-      <head>
-        <meta charset="utf-8">
-        <meta name="viewport" content="width=device-width, initial-scale=1">
-     </head>
-     <body>`;
-     const footer = `
-     </body>
-    </html>
-      `;
-      const content = Array.prototype.map.call(document.noi.wikis(),
-                      w => {
-                       const w_ = document.importNode(w, true);
-                       for (var attr of w_.attributes) {
-                         if (attr.nodeName === "class") {
-                             w_.removeAttribute(attr.nodeName);
-                         }
-                       }
-                       for (var data in w_.dataset) {
-                         delete w_.dataset[data];
-                       }
-                       return w_.outerHTML;
-                      });
-      content.unshift(header);
-      content.push(footer);
-      return new Blob(content, {type: "text/html"});
-    }
-
-    (function() {
-    var previousObjectURL = null;
-    document.noi.saveHTML = () => {
-      if (previousObjectURL !== null) {
-        URL.revokeObjectURL(previousObjectURL);
-      }
-      let url = URL.createObjectURL(document.noi.getHTMLBlob());
-      var name = window.location.pathname.split("/").slice(-1)[0];
-      if (!name.endsWith(".html")) {
-        name = "index.html";
-      }
-      let link = document.createElement('a');
-      link.setAttribute("download", name);
-      link.setAttribute("href", url);
-      document.body.appendChild(link);
-      link.click();
-      document.body.removeChild(link);
-    }}).call(this);
-
-
-    document.addEventListener('noi-render-ready', function () {
-      customElements.define('noi-wiki', NoiWiki);
-      function loadWikis() {
-        if (document.location.hash == "") {
-          document.noi.wiki('default').show();
-        } else {
-          document.location.hash.split("#").slice(1).map(decodeURIComponent).forEach((name) => document.noi.wiki(name).show());
-        }
-      }
-      loadWikis();
-      window.onhashchange = () => {
-        document.noi.wikis().forEach((w) => w.hide());
-        loadWikis();
-      }
-    });
-  </script>
-</noi-wiki>
diff --git a/src/core/noi-wikis.noi b/src/core/noi-wikis.html
similarity index 61%
rename from src/core/noi-wikis.noi
rename to src/core/noi-wikis.html
index 9e748ac..6b646dc 100644
--- a/src/core/noi-wikis.noi
+++ b/src/core/noi-wikis.html
@@ -1,19 +1,18 @@
 <noi-wiki id="noi/core/noi-wikis" title="noi-wikis custom element" content-type="text/x.html-source">
   <script>
     class NoiWikis extends HTMLElement {
-      constructor() {
-        super();
-        this.html = hyperHTML.bind(this);
+      constructor () {
+        super()
+        this.html = hyperHTML.bind(this)
       }
-      connectedCallback() {
-        this.html`${Array.prototype.map.call(document.noi.wikis(this.getAttribute("query")),
-          w => hyperHTML`<noi-var name="wiki" value=${w.id}>${{ html: this.innerHTML }}</noi-var>`)}`;
+      connectedCallback () {
+        this.html`${Array.prototype.map.call(document.noi.wikis(this.getAttribute('query')),
+          w => hyperHTML`<noi-var name="wiki" value=${w.id}>${{ html: this.innerHTML }}</noi-var>`)}`
       }
-
     }
 
     document.addEventListener('noi-render-ready', function () {
-      customElements.define('noi-wikis', NoiWikis);
+      customElements.define('noi-wikis', NoiWikis)
     })
   </script>
-</noi-wiki>
\ No newline at end of file
+</noi-wiki>
diff --git a/src/default.noi b/src/default.html
similarity index 100%
rename from src/default.noi
rename to src/default.html
diff --git a/src/libraries/markdown-it/noi-link.html b/src/libraries/markdown-it/noi-link.html
new file mode 100644
index 0000000..33af74a
--- /dev/null
+++ b/src/libraries/markdown-it/noi-link.html
@@ -0,0 +1,53 @@
+<noi-wiki id="noi/libraries/markdown-it/plugins/noi-link" content-type="text/x.html-source">
+  <script>
+    window.markdownItNoiLink = (md) => {
+      md.inline.ruler.push('noi-link', (state, silent) => {
+        var found; var content; var token; var max = state.posMax; var start = state.pos
+        if (start + 4 >= max) { return false }
+        if (silent) { return false } // don't run any pairs in validation mode
+        if (state.src.charCodeAt(start) !== 0x5B && /* [ */
+          state.src.charCodeAt(start + 1) !== 0x5B) { return false }
+
+        state.pos = start + 2
+
+        while (state.pos < max) {
+          if (state.src.charCodeAt(state.pos) === 0x5D && /* ] */
+            state.src.charCodeAt(state.pos + 1) === 0x5D) {
+            found = true
+            break
+          }
+
+          state.md.inline.skipToken(state)
+        }
+
+        if (!found || start + 2 === state.pos) {
+          state.pos = start
+          return false
+        }
+
+        content = state.src.slice(start + 2, state.pos)
+        var [name, link] = content.split('|')
+
+        // found!
+        state.posMax = state.pos
+        state.pos = start + 2
+
+        token = state.push('noi_link_open', 'a', 1)
+        token.markup = '[['
+        token.attrSet('href', '#' + (link || name))
+        token.attrSet('is', 'noi-link')
+
+        token = state.push('text', '', 0)
+        token.content = name || link
+
+        token = state.push('noi_link_close', 'a', -1)
+        token.markup = ']]'
+
+        state.pos = state.posMax + 2
+        state.posMax = max
+
+        return true
+      })
+    }
+  </script>
+</noi-wiki>
\ No newline at end of file
diff --git a/src/libraries/markdown-it/noi-link.noi b/src/libraries/markdown-it/noi-link.noi
deleted file mode 100644
index 4ead0b3..0000000
--- a/src/libraries/markdown-it/noi-link.noi
+++ /dev/null
@@ -1,54 +0,0 @@
-<noi-wiki id="noi/libraries/markdown-it/plugins/noi-link" content-type="text/x.html-source">
-  <script>
-    window.markdownItNoiLink = (md) => {
-      md.inline.ruler.push('noi-link', (state, silent) => {
-        var found, content, token, max = state.posMax, start = state.pos;
-        if (start + 4 >= max) { return false; }
-        if (silent) { return false; } // don't run any pairs in validation mode
-        if (state.src.charCodeAt(start) !== 0x5B && /* [ */
-          state.src.charCodeAt(start + 1) !== 0x5B) { return false; }
-
-        state.pos = start + 2;
-
-        while (state.pos < max) {
-          if (state.src.charCodeAt(state.pos) === 0x5D && /* ] */
-            state.src.charCodeAt(state.pos + 1) === 0x5D) {
-            found = true;
-            break;
-          }
-
-          state.md.inline.skipToken(state);
-        }
-
-        if (!found || start + 2 === state.pos) {
-          state.pos = start;
-          return false;
-        }
-
-        content = state.src.slice(start + 2, state.pos);
-        var [name, link] = content.split('|');
-
-        // found!
-        state.posMax = state.pos;
-        state.pos = start + 2;
-
-        token = state.push('noi_link_open', 'a', 1);
-        token.markup = '[[';
-        token.attrSet("href", "#" + (link || name));
-        token.attrSet("is", "noi-link");
-
-        token = state.push('text', '', 0);
-        token.content = name || link;
-
-        token = state.push('noi_link_close', 'a', -1);
-        token.markup = ']]';
-
-        state.pos = state.posMax + 2;
-        state.posMax = max;
-
-        return true;
-
-      });
-    }
-  </script>
-</noi-wiki>
\ No newline at end of file
diff --git a/src/libraries/markdown-it/noi-transclude.noi b/src/libraries/markdown-it/noi-transclude.html
similarity index 50%
rename from src/libraries/markdown-it/noi-transclude.noi
rename to src/libraries/markdown-it/noi-transclude.html
index 08b344e..45e9444 100644
--- a/src/libraries/markdown-it/noi-transclude.noi
+++ b/src/libraries/markdown-it/noi-transclude.html
@@ -2,53 +2,51 @@
   <script>
     window.markdownItNoiTransclude = (md) => {
       md.inline.ruler.push('noi-transclude', (state, silent) => {
-        var found, content, token, max = state.posMax, start = state.pos;
-        if (start + 4 >= max) { return false; }
-        if (silent) { return false; } // don't run any pairs in validation mode
+        var found; var content; var token; var max = state.posMax; var start = state.pos
+        if (start + 4 >= max) { return false }
+        if (silent) { return false } // don't run any pairs in validation mode
         if (state.src.charCodeAt(start) !== 0x7B && /* { */
-          state.src.charCodeAt(start + 1) !== 0x7B) { return false; }
+          state.src.charCodeAt(start + 1) !== 0x7B) { return false }
 
-        state.pos = start + 2;
+        state.pos = start + 2
 
         while (state.pos < max) {
           if (state.src.charCodeAt(state.pos) === 0x7D && /* } */
             state.src.charCodeAt(state.pos + 1) === 0x7D) {
-            found = true;
-            break;
+            found = true
+            break
           }
 
-          state.pos++;
+          state.pos++
         }
 
         if (!found || start + 2 === state.pos) {
-          state.pos = start;
-          return false;
+          state.pos = start
+          return false
         }
 
-        content = state.src.slice(start + 2, state.pos);
-        var [name, attr] = content.split('#');
+        content = state.src.slice(start + 2, state.pos)
+        var [name, attr] = content.split('#')
 
         // found!
-        state.posMax = state.pos;
-        state.pos = start + 2;
+        state.posMax = state.pos
+        state.pos = start + 2
 
-        token = state.push('noi_transclude_open', 'noi-transclude', 1);
-        token.markup = '{{';
-        token.attrSet("wiki", name);
+        token = state.push('noi_transclude_open', 'noi-transclude', 1)
+        token.markup = '{{'
+        token.attrSet('wiki', name)
         if (typeof attr === 'string') {
-          token.attrSet("attribute", attr);
+          token.attrSet('attribute', attr)
         }
 
-        token = state.push('noi_transclude_open', 'noi-transclude', -1);
-        token.markup = '}}';
+        token = state.push('noi_transclude_open', 'noi-transclude', -1)
+        token.markup = '}}'
 
+        state.pos = state.posMax + 2
+        state.posMax = max
 
-        state.pos = state.posMax + 2;
-        state.posMax = max;
-
-        return true;
-
-      });
+        return true
+      })
     }
   </script>
 </noi-wiki>
\ No newline at end of file
diff --git a/src/libraries/markdown-it/noi-var.html b/src/libraries/markdown-it/noi-var.html
new file mode 100644
index 0000000..bf2b3bf
--- /dev/null
+++ b/src/libraries/markdown-it/noi-var.html
@@ -0,0 +1,49 @@
+<noi-wiki id="noi/libraries/markdown-it/plugins/noi-var" content-type="text/x.html-source">
+  <script>
+    window.markdownItNoiVar = (md) => {
+      md.inline.ruler.push('noi-var', (state, silent) => {
+        var found; var content; var token; var max = state.posMax; var start = state.pos
+        if (start + 4 >= max) { return false }
+        if (silent) { return false } // don't run any pairs in validation mode
+        if (state.src.charCodeAt(start) !== 0x7B && /* { */
+          state.src.charCodeAt(start + 1) !== 0x25 /* % */) { return false }
+
+        state.pos = start + 2
+
+        while (state.pos < max) {
+          if (state.src.charCodeAt(state.pos) === 0x25 && /* % */
+            state.src.charCodeAt(state.pos + 1) === 0x7D /* } */) {
+            found = true
+            break
+          }
+
+          state.pos++
+        }
+
+        if (!found || start + 2 === state.pos) {
+          state.pos = start
+          return false
+        }
+
+        content = state.src.slice(start + 2, state.pos)
+        var name = content.trim()
+
+        // found!
+        state.posMax = state.pos
+        state.pos = start + 2
+
+        token = state.push('noi_var_open', 'noi-var', 1)
+        token.markup = '{%'
+        token.attrSet('name', name)
+
+        token = state.push('noi_var_open', 'noi-var', -1)
+        token.markup = '%}'
+
+        state.pos = state.posMax + 2
+        state.posMax = max
+
+        return true
+      })
+    }
+  </script>
+</noi-wiki>
\ No newline at end of file
diff --git a/src/libraries/markdown-it/noi-var.noi b/src/libraries/markdown-it/noi-var.noi
deleted file mode 100644
index 76b3f22..0000000
--- a/src/libraries/markdown-it/noi-var.noi
+++ /dev/null
@@ -1,51 +0,0 @@
-<noi-wiki id="noi/libraries/markdown-it/plugins/noi-var" content-type="text/x.html-source">
-  <script>
-    window.markdownItNoiVar = (md) => {
-      md.inline.ruler.push('noi-var', (state, silent) => {
-        var found, content, token, max = state.posMax, start = state.pos;
-        if (start + 4 >= max) { return false; }
-        if (silent) { return false; } // don't run any pairs in validation mode
-        if (state.src.charCodeAt(start) !== 0x7B && /* { */
-          state.src.charCodeAt(start + 1) !== 0x25 /* % */) { return false; }
-
-        state.pos = start + 2;
-
-        while (state.pos < max) {
-          if (state.src.charCodeAt(state.pos) === 0x25 && /* % */
-            state.src.charCodeAt(state.pos + 1) === 0x7D /* } */) {
-            found = true;
-            break;
-          }
-
-          state.pos++;
-        }
-
-        if (!found || start + 2 === state.pos) {
-          state.pos = start;
-          return false;
-        }
-
-        content = state.src.slice(start + 2, state.pos);
-        var name = content.trim();
-
-        // found!
-        state.posMax = state.pos;
-        state.pos = start + 2;
-
-        token = state.push('noi_var_open', 'noi-var', 1);
-        token.markup = '{%';
-        token.attrSet("name", name);
-
-        token = state.push('noi_var_open', 'noi-var', -1);
-        token.markup = '%}';
-
-
-        state.pos = state.posMax + 2;
-        state.posMax = max;
-
-        return true;
-
-      });
-    }
-  </script>
-</noi-wiki>
\ No newline at end of file
diff --git a/src/libraries/markdown-it/noi-widget.html b/src/libraries/markdown-it/noi-widget.html
new file mode 100644
index 0000000..b6d8f2f
--- /dev/null
+++ b/src/libraries/markdown-it/noi-widget.html
@@ -0,0 +1,68 @@
+<noi-wiki id="noi/libraries/markdown-it/plugins/noi-widget" content-type="text/x.html-source">
+  <script>
+    window.markdownItNoiWidget = (md) => {
+      md.inline.ruler.push('noi-widget', (state, silent) => {
+        var found; var content; var token; var max = state.posMax; var start = state.pos
+        if (start + 4 >= max) { return false }
+        if (silent) { return false } // don't run any pairs in validation mode
+        if (state.src.charCodeAt(start) !== 0x5b && /* [ */
+          state.src.charCodeAt(start + 1) !== 0x7b /* { */) { return false }
+
+        state.pos = start + 2
+
+        while (state.pos < max) {
+          if (state.src.charCodeAt(state.pos) === 0x7d && /* } */
+            state.src.charCodeAt(state.pos + 1) === 0x5d /* ] */) {
+            found = true
+            break
+          }
+
+          state.pos++
+        }
+
+        if (!found || start + 2 === state.pos) {
+          state.pos = start
+          return false
+        }
+
+        content = state.src.slice(start + 2, state.pos)
+
+        // found!
+        state.posMax = state.pos
+        state.pos = start + 2
+
+        const closing = content.startsWith('/')
+        const selfClosing = content.endsWith('/')
+        const opening = !closing && !selfClosing
+
+        const name = 'noi-' + content.split(' ')[0].replace('/', '')
+
+        if (selfClosing) {
+          token = state.push('noi_widget_open', name, 1)
+          token.markup = '[{'
+        }
+
+        if (opening) {
+          token = state.push('noi_widget_open', name, 1)
+          token.markup = '[{'
+        }
+
+        for (var pair of content.replace(/^\//, '').replace(/\/$/, '')
+          .split(' ').slice(1)) {
+          const [name, val] = pair.split('=')
+          token.attrSet(name, val.replace(/^"/, '').replace(/"$/, ''))
+        }
+
+        if (closing || selfClosing) {
+          token = state.push('noi_widget_close', name, -1)
+          token.markup = '/}]'
+        }
+
+        state.pos = state.posMax + 2
+        state.posMax = max
+
+        return true
+      })
+    }
+  </script>
+</noi-wiki>
\ No newline at end of file
diff --git a/src/libraries/markdown-it/noi-widget.noi b/src/libraries/markdown-it/noi-widget.noi
deleted file mode 100644
index 49e3116..0000000
--- a/src/libraries/markdown-it/noi-widget.noi
+++ /dev/null
@@ -1,69 +0,0 @@
-<noi-wiki id="noi/libraries/markdown-it/plugins/noi-widget" content-type="text/x.html-source">
-  <script>
-    window.markdownItNoiWidget = (md) => {
-      md.inline.ruler.push('noi-widget', (state, silent) => {
-        var found, content, token, max = state.posMax, start = state.pos;
-        if (start + 4 >= max) { return false; }
-        if (silent) { return false; } // don't run any pairs in validation mode
-        if (state.src.charCodeAt(start) !== 0x5b && /* [ */
-          state.src.charCodeAt(start + 1) !== 0x7b /* { */) { return false; }
-
-        state.pos = start + 2;
-
-        while (state.pos < max) {
-          if (state.src.charCodeAt(state.pos) === 0x7d && /* } */
-            state.src.charCodeAt(state.pos + 1) === 0x5d /* ] */) {
-            found = true;
-            break;
-          }
-
-          state.pos++;
-        }
-
-        if (!found || start + 2 === state.pos) {
-          state.pos = start;
-          return false;
-        }
-
-        content = state.src.slice(start + 2, state.pos);
-
-        // found!
-        state.posMax = state.pos;
-        state.pos = start + 2;
-
-        const closing = content.startsWith("/");
-        const selfClosing = content.endsWith("/");
-        const opening = !closing && !selfClosing
-
-        const name = "noi-" + content.split(" ")[0].replace("/", "");
-
-        if (selfClosing) {
-          token = state.push('noi_widget_open', name, 1);
-          token.markup = '[{';
-        }
-
-        if (opening) {
-          token = state.push('noi_widget_open', name, 1);
-          token.markup = '[{';
-        }
-
-        for (var pair of content.replace(/^\//, "").replace(/\/$/, "")
-          .split(" ").slice(1)) {
-          const [name, val] = pair.split("=");
-          token.attrSet(name, val.replace(/^"/, "").replace(/"$/, ""));
-        }
-
-        if (closing || selfClosing) {
-          token = state.push('noi_widget_close', name, -1);
-          token.markup = '/}]';
-        }
-
-        state.pos = state.posMax + 2;
-        state.posMax = max;
-
-        return true;
-
-      });
-    }
-  </script>
-</noi-wiki>
\ No newline at end of file
diff --git a/src/render/bulma/navbar.noi b/src/render/bulma/navbar.html
similarity index 54%
rename from src/render/bulma/navbar.noi
rename to src/render/bulma/navbar.html
index d1ae99d..e47f836 100644
--- a/src/render/bulma/navbar.noi
+++ b/src/render/bulma/navbar.html
@@ -1,43 +1,42 @@
 <noi-wiki id="noi/render/bulma/navbar" content-type="text/x.html-source">
   <script>
     class BulmaNavbar extends HTMLElement {
-      constructor() {
-        super();
-        this.html = hyperHTML.bind(this);
-        this.wikiFilter = "";
+      constructor () {
+        super()
+        this.html = hyperHTML.bind(this)
+        this.wikiFilter = ''
       }
-      connectedCallback() {
-        this.render();
+      connectedCallback () {
+        this.render()
       }
-      toggleBurger() {
-        this.querySelector(".navbar-burger").classList.toggle("is-active");
-        this.querySelector(".navbar-menu").classList.toggle("is-active");
+      toggleBurger () {
+        this.querySelector('.navbar-burger').classList.toggle('is-active')
+        this.querySelector('.navbar-menu').classList.toggle('is-active')
       }
-      toggleWikis() {
-        this.querySelector("#wikis").classList.toggle("is-active");
+      toggleWikis () {
+        this.querySelector('#wikis').classList.toggle('is-active')
       }
-      closeWikis() {
-        this.querySelector("#wikis").classList.remove("is-active");
-        this.querySelector(".navbar-burger").classList.remove("is-active");
-        this.querySelector(".navbar-menu").classList.remove("is-active");
+      closeWikis () {
+        this.querySelector('#wikis').classList.remove('is-active')
+        this.querySelector('.navbar-burger').classList.remove('is-active')
+        this.querySelector('.navbar-menu').classList.remove('is-active')
 
-        return false;
+        return false
       }
 
-      changeWikiFilter(e) {
-        this.wikiQuery = `[id*="${e.target.value}"]`;
-        this.wikiFilter = e.target.value;
-        this.render();
+      changeWikiFilter (e) {
+        this.wikiQuery = `[id*="${e.target.value}"]`
+        this.wikiFilter = e.target.value
+        this.render()
       }
 
-      new() {
-        document.noi.wiki("noname").show();
-        this.querySelector(".navbar-burger").classList.remove("is-active");
-        this.querySelector(".navbar-menu").classList.remove("is-active");
-
+      new () {
+        document.noi.wiki('noname').show()
+        this.querySelector('.navbar-burger').classList.remove('is-active')
+        this.querySelector('.navbar-menu').classList.remove('is-active')
       }
 
-      render() {
+      render () {
         this.html`
 <nav class="navbar is-fixed-bottom is-light" aria-label="tools">
 
@@ -68,19 +67,18 @@
              <input class="input is-rounded" type="text" oninput=${this.changeWikiFilter.bind(this)} value=${this.wikiFilter}>
            </div>
             ${Array.prototype.map.call(document.noi.wikis(this.wikiQuery),
-            w => hyperHTML`<a class="navbar-item" href="${'#' + w.id}" is="noi-link" onclick=${this.closeWikis.bind(this)}>${w.id}</a>`)}
-          </div>
-        </div>
+        w => hyperHTML`<a class="navbar-item" href="${'#' + w.id}" is="noi-link" onclick=${this.closeWikis.bind(this)}>${w.id}</a>`)}
+      </div>
+    </div>
   </div>
   </div>
 
 </nav>
-                `;
+            `
       }
     }
     document.addEventListener('DOMContentLoaded', function () {
-      customElements.define('noi-bulma-navbar', BulmaNavbar);
-    });
-
+      customElements.define('noi-bulma-navbar', BulmaNavbar)
+    })
   </script>
 </noi-wiki>
\ No newline at end of file
diff --git a/src/render/bulma/noi-listener.html b/src/render/bulma/noi-listener.html
new file mode 100644
index 0000000..14607d1
--- /dev/null
+++ b/src/render/bulma/noi-listener.html
@@ -0,0 +1,23 @@
+<noi-wiki id="noi/render/bulma/listener" content-type="text/x.html-source">
+  <script>
+    document.addEventListener('DOMContentLoaded', function () {
+      var canvas = document.createElement('div')
+      canvas.setAttribute('id', 'noi-canvas')
+      canvas.classList.add('is-visible', 'container')
+      document.body.appendChild(canvas)
+      document.body.appendChild(document.createElement('noi-bulma-navbar'))
+      document.body.classList.add('has-navbar-fixed-bottom')
+      document.dispatchEvent(new Event('noi-render-ready'))
+    })
+    document.addEventListener('noi-show', function (e) {
+      document.getElementById('noi-canvas').appendChild(e.detail.element)
+      e.detail.element.classList.add('content')
+      e.detail.element.setAttribute('data-rendered', 'yes')
+    })
+    document.addEventListener('noi-hide', function (e) {
+      document.body.appendChild(e.detail.element)
+      e.detail.element.classList.remove('content')
+      e.detail.element.removeAttribute('data-rendered')
+    })
+  </script>
+</noi-wiki>
\ No newline at end of file
diff --git a/src/render/bulma/noi-listener.noi b/src/render/bulma/noi-listener.noi
deleted file mode 100644
index d366133..0000000
--- a/src/render/bulma/noi-listener.noi
+++ /dev/null
@@ -1,25 +0,0 @@
-<noi-wiki id="noi/render/bulma/listener" content-type="text/x.html-source">
-  <script>
-    document.addEventListener('DOMContentLoaded', function () {
-      var canvas = document.createElement("div");
-      canvas.setAttribute("id", "noi-canvas");
-      canvas.classList.add("is-visible", "container");
-      document.body.appendChild(canvas);
-      document.body.appendChild(document.createElement("noi-bulma-navbar"));
-      document.body.classList.add("has-navbar-fixed-bottom");
-      document.dispatchEvent(new Event('noi-render-ready'));
-    });
-    document.addEventListener('noi-show', function (e) {
-      document.getElementById('noi-canvas').appendChild(e.detail.element);
-      e.detail.element.classList.add('content');
-      e.detail.element.setAttribute("data-rendered", "yes");
-    });
-    document.addEventListener('noi-hide', function (e) {
-      document.body.appendChild(e.detail.element);
-      e.detail.element.classList.remove('content');
-      e.detail.element.removeAttribute("data-rendered");
-    });
-
-
-  </script>
-</noi-wiki>
\ No newline at end of file
diff --git a/src/render/bulma/wiki-view.html b/src/render/bulma/wiki-view.html
new file mode 100644
index 0000000..abdafd0
--- /dev/null
+++ b/src/render/bulma/wiki-view.html
@@ -0,0 +1,72 @@
+<noi-wiki id="noi/render/bulma/wiki-view" content-type="text/x.html-source">
+  <script>
+    (function () {
+      let view = (stylesheet) => class extends HTMLElement {
+        constructor () {
+          super()
+          this.html = hyperHTML.bind(this)
+          this.stylesheet = stylesheet
+        }
+        connectedCallback () {
+          this.editing = this.hasAttribute('data-editing') ? this.getAttribute('data-editing') : false
+          this.classList.add('box')
+          this.originalHTML = this.innerHTML.replace(/^\n/, '').replace(/\n$/, '')
+          this.render()
+        }
+        edit () {
+          this.editing = true
+          this.render()
+        }
+        close () {
+          document.getElementById(this.id).hide()
+        }
+        save () {
+          this.editing = false
+          const wiki = document.noi.wiki(this.id)
+          wiki.removeAttribute('data-editing')
+          wiki.id = this.querySelector('#new-id').value
+          wiki.innerHTML = this.querySelector('#new-content').value
+          this.removeAttribute('data-editing')
+          this.originalHTML = wiki.innerHTML
+          this.render()
+        }
+        render () {
+          const text = this.editing ? hyperHTML`<textarea class="textarea" id="new-content">${this.originalHTML}</textarea><div class="level"><div class="level-right"><div class="level-item"><input type="submit" class="button" value="Save" onclick=${this.save.bind(this)}></div></div></div>` : { html: document.noi.contentType[this.getAttribute('content-type')](this.originalHTML) }
+          const titleHtml = this.editing ? hyperHTML`<input id="new-id" type="text" value=${this.id} class="input">` : (this.getAttribute('title') || this.id)
+          this.html`
+                        <link href=${this.stylesheet} rel="stylesheet">
+                        <div class="level is-mobile">
+                        <div class="level-left">
+                        <div class="level-item">
+                        <h1 class="title">${titleHtml}</h1>
+                        </div>
+                        </div>
+                        <div class="level-right">
+                          <div class="level-item">
+                          <div class="buttons has-addons">
+                          <a class="button" onclick=${this.edit.bind(this)}><span class="icon">
+                          <span class="typcn typcn-edit"></span>                          </span></a>
+                          <a class="button" onclick=${this.close.bind(this)}><span class="icon">
+                            <span class="typcn typcn-delete"></span>
+                          </span></a>
+                          </div>
+                          </div>
+                        </div>
+                        </div>
+                        </div>
+                        <div class="content" id="content">
+                          ${text}
+                      </div>
+                      `
+        }
+      }
+      document.addEventListener('DOMContentLoaded', function () {
+        let style = document.noi.wiki('noi/render/bulma/style.css').querySelector('style').innerHTML
+        let icons = document.noi.wiki('noi/libraries/typicons').querySelector('style').innerHTML
+        let blob = new Blob(['noi-bulma-wiki-view { display: block !important }', style, icons], { type: 'text/css' })
+        let url = URL.createObjectURL(blob)
+        customElements.define('noi-bulma-wiki-view', view(url))
+      })
+    }).apply(this)
+  </script>
+</noi-wiki>
\ No newline at end of file
diff --git a/src/render/bulma/wiki-view.noi b/src/render/bulma/wiki-view.noi
deleted file mode 100644
index 50b7904..0000000
--- a/src/render/bulma/wiki-view.noi
+++ /dev/null
@@ -1,72 +0,0 @@
-<noi-wiki id="noi/render/bulma/wiki-view" content-type="text/x.html-source">
-  <script>
-  (function() {
-    let view = (stylesheet) => class extends HTMLElement {
-      constructor() {
-        super();
-        this.html = hyperHTML.bind(this);
-        this.stylesheet = stylesheet;
-      }
-      connectedCallback() {
-        this.editing = this.hasAttribute("data-editing") ? this.getAttribute("data-editing") : false;
-        this.classList.add('box');
-        this.originalHTML = this.innerHTML.replace(/^\n/, '').replace(/\n$/, '');
-        this.render();
-      }
-      edit() {
-        this.editing = true;
-        this.render();
-      }
-      close() {
-        document.getElementById(this.id).hide();
-      }
-      save() {
-        this.editing = false;
-        const wiki = document.noi.wiki(this.id);
-        wiki.removeAttribute("data-editing");
-        wiki.id = this.querySelector("#new-id").value;
-        wiki.innerHTML = this.querySelector("#new-content").value;
-        this.removeAttribute("data-editing");
-        this.originalHTML = wiki.innerHTML;
-        this.render();
-      }
-      render() {
-        const text = this.editing ? hyperHTML`<textarea class="textarea" id="new-content">${this.originalHTML}</textarea><div class="level"><div class="level-right"><div class="level-item"><input type="submit" class="button" value="Save" onclick=${this.save.bind(this)}></div></div></div>` : { html: document.noi.contentType[this.getAttribute('content-type')](this.originalHTML) };
-        const title_html = this.editing ? hyperHTML`<input id="new-id" type="text" value=${this.id} class="input">` : (this.getAttribute("title") || this.id);
-        this.html`
-                        <link href=${this.stylesheet} rel="stylesheet">
-                        <div class="level is-mobile">
-                        <div class="level-left">
-                        <div class="level-item">
-                        <h1 class="title">${title_html}</h1>
-                        </div>
-                        </div>
-                        <div class="level-right">
-                          <div class="level-item">
-                          <div class="buttons has-addons">
-                          <a class="button" onclick=${this.edit.bind(this)}><span class="icon">
-                          <span class="typcn typcn-edit"></span>                          </span></a>
-                          <a class="button" onclick=${this.close.bind(this)}><span class="icon">
-                            <span class="typcn typcn-delete"></span>
-                          </span></a>
-                          </div>
-                          </div>
-                        </div>
-                        </div>
-                        </div>
-                        <div class="content" id="content">
-                          ${text}
-                        </div>
-                        `;
-      }
-    }
-    document.addEventListener('DOMContentLoaded', function () {
-      let style = document.noi.wiki('noi/render/bulma/style.css').querySelector('style').innerHTML;
-      let icons = document.noi.wiki('noi/libraries/typicons').querySelector('style').innerHTML;
-      let blob = new Blob(["noi-bulma-wiki-view { display: block !important }", style, icons], {type: "text/css"});
-      let url = URL.createObjectURL(blob);
-      customElements.define('noi-bulma-wiki-view', view(url));
-    });
-   }).apply(this);
-  </script>
-</noi-wiki>
diff --git a/src/render/content-renderer.html b/src/render/content-renderer.html
new file mode 100644
index 0000000..61f4176
--- /dev/null
+++ b/src/render/content-renderer.html
@@ -0,0 +1,68 @@
+<noi-wiki id="noi/render/content" content-type="text/x.html-source">
+  <script>
+    /* global markdownit, markdownItAttrs, markdownitSub,
+              markdownitSup, markdownItNoiLink, markdownItNoiTransclude,
+              markdownItNoiWidget, markdownItNoiVar */
+    var contentType = {}
+
+    const markdown = markdownit()
+      .use(markdownItAttrs)
+      .use(markdownitSub)
+      .use(markdownitSup)
+      .use(markdownItNoiLink)
+      .use(markdownItNoiTransclude)
+      .use(markdownItNoiWidget)
+      .use(markdownItNoiVar)
+
+    contentType['text/html'] = node => {
+      if (typeof node === 'string') {
+        return node
+      }
+      if (node instanceof Node) {
+        return node.innerHTML
+      }
+      throw new Error(`${node} is neither a string nor a Node`)
+    }
+
+    contentType['text/markdown'] = node => {
+      if (typeof node === 'string') {
+        return markdown.render(node)
+      }
+      if (node instanceof Node) {
+        const template = node.querySelector('template')
+        if (template == null) {
+          return markdown.render(node.innerHTML)
+        } else {
+          return markdown.render(template.innerHTML)
+        }
+      }
+      throw new Error(`${node} is neither a string nor a Node`)
+    }
+
+    contentType['text/x.html-source'] = node => {
+      const escapeHtml = function escapeHtml (unsafe) {
+        return unsafe
+          .replace(/&/g, '&amp;')
+          .replace(/</g, '&lt;')
+          .replace(/>/g, '&gt;')
+          .replace(/"/g, '&quot;')
+          .replace(/'/g, '&#039;')
+      }
+
+      if (typeof node === 'string') {
+        return `<pre><code>${escapeHtml(node)}</code></pre>`
+      }
+      if (node instanceof Node) {
+        return `<pre><code>${escapeHtml(node.innerHTML)}</code></pre>`
+      }
+      throw new Error(`${node} is neither a string nor a Node`)
+    }
+
+    document.noi = document.noi || {}
+    document.noi.contentType = new Proxy(contentType, {
+      get (target, name) {
+        return target.hasOwnProperty(name) ? target[name] : target['text/markdown']
+      }
+    })
+  </script>
+</noi-wiki>
\ No newline at end of file
diff --git a/src/render/content-renderer.noi b/src/render/content-renderer.noi
deleted file mode 100644
index b9d11ae..0000000
--- a/src/render/content-renderer.noi
+++ /dev/null
@@ -1,65 +0,0 @@
-<noi-wiki id="noi/render/content" content-type="text/x.html-source">
-  <script>
-    var contentType = {}
-
-    const markdown = markdownit()
-      .use(markdownItAttrs)
-      .use(markdownitSub)
-      .use(markdownitSup)
-      .use(markdownItNoiLink)
-      .use(markdownItNoiTransclude)
-      .use(markdownItNoiWidget)
-      .use(markdownItNoiVar);
-
-    contentType["text/html"] = node => {
-      if (typeof node == 'string') {
-        return node;
-      }
-      if (node instanceof Node) {
-        return node.innerHTML;
-      }
-      throw `${node} is neither a string nor a Node`;
-    }
-
-    contentType["text/markdown"] = node => {
-      if (typeof node == 'string') {
-        return markdown.render(node);
-      }
-      if (node instanceof Node) {
-        const template = node.querySelector('template');
-        if (template == null) {
-          return markdown.render(node.innerHTML);
-        } else {
-          return markdown.render(template.innerHTML);
-        }
-      }
-      throw `${node} is neither a string nor a Node`;
-    };
-
-    contentType["text/x.html-source"] = node => {
-      const escapeHtml = function escapeHtml(unsafe) {
-        return unsafe
-          .replace(/&/g, "&amp;")
-          .replace(/</g, "&lt;")
-          .replace(/>/g, "&gt;")
-          .replace(/"/g, "&quot;")
-          .replace(/'/g, "&#039;");
-      }
-
-      if (typeof node == 'string') {
-        return `<pre><code>${escapeHtml(node)}</code></pre>`
-      }
-      if (node instanceof Node) {
-        return `<pre><code>${escapeHtml(node.innerHTML)}</code></pre>`
-      }
-      throw `${node} is neither a string nor a Node`;
-    }
-
-    document.noi = document.noi || {};
-    document.noi.contentType = new Proxy(contentType, {
-      get(target, name) {
-        return target.hasOwnProperty(name) ? target[name] : target["text/markdown"]
-      }
-    });
-  </script>
-</noi-wiki>
\ No newline at end of file
diff --git a/src/0_polyfills/web-components.noi b/vendor/0_polyfills/web-components.html
similarity index 100%
rename from src/0_polyfills/web-components.noi
rename to vendor/0_polyfills/web-components.html
diff --git a/src/libraries/file-to-data-uri.sh b/vendor/libraries/file-to-data-uri.sh
similarity index 100%
rename from src/libraries/file-to-data-uri.sh
rename to vendor/libraries/file-to-data-uri.sh
diff --git a/src/libraries/hyper.noi b/vendor/libraries/hyper.html
similarity index 100%
rename from src/libraries/hyper.noi
rename to vendor/libraries/hyper.html
diff --git a/src/libraries/markdown-it/attrs.noi b/vendor/libraries/markdown-it/attrs.html
similarity index 100%
rename from src/libraries/markdown-it/attrs.noi
rename to vendor/libraries/markdown-it/attrs.html
diff --git a/src/libraries/markdown-it/markdown-it.noi b/vendor/libraries/markdown-it/markdown-it.html
similarity index 100%
rename from src/libraries/markdown-it/markdown-it.noi
rename to vendor/libraries/markdown-it/markdown-it.html
diff --git a/src/libraries/markdown-it/subsup.noi b/vendor/libraries/markdown-it/subsup.html
similarity index 100%
rename from src/libraries/markdown-it/subsup.noi
rename to vendor/libraries/markdown-it/subsup.html
diff --git a/src/libraries/typicons.noi b/vendor/libraries/typicons.html
similarity index 100%
rename from src/libraries/typicons.noi
rename to vendor/libraries/typicons.html
diff --git a/src/libraries/typicons/typicons.css b/vendor/libraries/typicons/typicons.css
similarity index 100%
rename from src/libraries/typicons/typicons.css
rename to vendor/libraries/typicons/typicons.css
diff --git a/src/libraries/typicons/typicons.eot b/vendor/libraries/typicons/typicons.eot
similarity index 100%
rename from src/libraries/typicons/typicons.eot
rename to vendor/libraries/typicons/typicons.eot
diff --git a/src/libraries/typicons/typicons.min.css b/vendor/libraries/typicons/typicons.min.css
similarity index 100%
rename from src/libraries/typicons/typicons.min.css
rename to vendor/libraries/typicons/typicons.min.css
diff --git a/src/libraries/typicons/typicons.svg b/vendor/libraries/typicons/typicons.svg
similarity index 100%
rename from src/libraries/typicons/typicons.svg
rename to vendor/libraries/typicons/typicons.svg
diff --git a/src/libraries/typicons/typicons.ttf b/vendor/libraries/typicons/typicons.ttf
similarity index 100%
rename from src/libraries/typicons/typicons.ttf
rename to vendor/libraries/typicons/typicons.ttf
diff --git a/src/libraries/typicons/typicons.woff b/vendor/libraries/typicons/typicons.woff
similarity index 100%
rename from src/libraries/typicons/typicons.woff
rename to vendor/libraries/typicons/typicons.woff
diff --git a/src/render/bulma/bulma-style.noi b/vendor/render/bulma/bulma-style.html
similarity index 100%
rename from src/render/bulma/bulma-style.noi
rename to vendor/render/bulma/bulma-style.html
-- 
2.18.1

